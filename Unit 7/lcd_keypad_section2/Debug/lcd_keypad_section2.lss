
lcd_keypad_section2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000014e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000014e2  00001576  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000029  00800080  00800080  00001596  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001596  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000015f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00001630  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000112f  00000000  00000000  00001700  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000913  00000000  00000000  0000282f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009ac  00000000  00000000  00003142  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f8  00000000  00000000  00003af0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004eb  00000000  00000000  00003ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000094f  00000000  00000000  000041d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00004b22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	4e 41       	sbci	r20, 0x1E	; 30
      56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
      57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
      5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
      5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
      77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      87:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf e5       	ldi	r28, 0x5F	; 95
      96:	d8 e0       	ldi	r29, 0x08	; 8
      98:	de bf       	out	0x3e, r29	; 62
      9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	a0 e6       	ldi	r26, 0x60	; 96
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e2 ee       	ldi	r30, 0xE2	; 226
      a4:	f4 e1       	ldi	r31, 0x14	; 20
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 38       	cpi	r26, 0x80	; 128
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	a0 e8       	ldi	r26, 0x80	; 128
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a9 3a       	cpi	r26, 0xA9	; 169
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <main>
      c6:	0c 94 6f 0a 	jmp	0x14de	; 0x14de <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <calculate>:
#include "string.h"
#include "stdlib.h"



void calculate(char op1[],char op2[],char process){
      ce:	cf 92       	push	r12
      d0:	df 92       	push	r13
      d2:	ef 92       	push	r14
      d4:	ff 92       	push	r15
      d6:	0f 93       	push	r16
      d8:	1f 93       	push	r17
      da:	cf 93       	push	r28
      dc:	7c 01       	movw	r14, r24
      de:	8b 01       	movw	r16, r22
      e0:	c4 2f       	mov	r28, r20
	LCD_GOTO_XY(2,0);
      e2:	60 e0       	ldi	r22, 0x00	; 0
      e4:	82 e0       	ldi	r24, 0x02	; 2
      e6:	0e 94 ca 01 	call	0x394	; 0x394 <LCD_GOTO_XY>
	if(process == '+'){
      ea:	cb 32       	cpi	r28, 0x2B	; 43
      ec:	59 f4       	brne	.+22     	; 0x104 <calculate+0x36>
		int num = atoi(op1) + atoi(op2);
      ee:	c7 01       	movw	r24, r14
      f0:	0e 94 d3 05 	call	0xba6	; 0xba6 <atoi>
      f4:	6c 01       	movw	r12, r24
      f6:	c8 01       	movw	r24, r16
      f8:	0e 94 d3 05 	call	0xba6	; 0xba6 <atoi>
		lcd_dipaly_number(num);
      fc:	8c 0d       	add	r24, r12
      fe:	9d 1d       	adc	r25, r13
     100:	0e 94 42 02 	call	0x484	; 0x484 <lcd_dipaly_number>
	}
	if(process == '-'){
     104:	cd 32       	cpi	r28, 0x2D	; 45
     106:	69 f4       	brne	.+26     	; 0x122 <calculate+0x54>
		int num = atoi(op1) - atoi(op2);
     108:	c7 01       	movw	r24, r14
     10a:	0e 94 d3 05 	call	0xba6	; 0xba6 <atoi>
     10e:	6c 01       	movw	r12, r24
     110:	c8 01       	movw	r24, r16
     112:	0e 94 d3 05 	call	0xba6	; 0xba6 <atoi>
		lcd_dipaly_number(num);
     116:	96 01       	movw	r18, r12
     118:	28 1b       	sub	r18, r24
     11a:	39 0b       	sbc	r19, r25
     11c:	c9 01       	movw	r24, r18
     11e:	0e 94 42 02 	call	0x484	; 0x484 <lcd_dipaly_number>
	}
	if(process == '*'){
     122:	ca 32       	cpi	r28, 0x2A	; 42
     124:	89 f4       	brne	.+34     	; 0x148 <calculate+0x7a>
		int num = atoi(op1) * atoi(op2);
     126:	c7 01       	movw	r24, r14
     128:	0e 94 d3 05 	call	0xba6	; 0xba6 <atoi>
     12c:	6c 01       	movw	r12, r24
     12e:	c8 01       	movw	r24, r16
     130:	0e 94 d3 05 	call	0xba6	; 0xba6 <atoi>
		lcd_dipaly_number(num);
     134:	9c 01       	movw	r18, r24
     136:	c2 9e       	mul	r12, r18
     138:	c0 01       	movw	r24, r0
     13a:	c3 9e       	mul	r12, r19
     13c:	90 0d       	add	r25, r0
     13e:	d2 9e       	mul	r13, r18
     140:	90 0d       	add	r25, r0
     142:	11 24       	eor	r1, r1
     144:	0e 94 42 02 	call	0x484	; 0x484 <lcd_dipaly_number>
	}
	if(process == '/'){
     148:	cf 32       	cpi	r28, 0x2F	; 47
     14a:	81 f4       	brne	.+32     	; 0x16c <calculate+0x9e>
		float num = atof(op1) / atof(op2);
     14c:	c7 01       	movw	r24, r14
     14e:	0e 94 cf 05 	call	0xb9e	; 0xb9e <atof>
     152:	6b 01       	movw	r12, r22
     154:	7c 01       	movw	r14, r24
     156:	c8 01       	movw	r24, r16
     158:	0e 94 cf 05 	call	0xb9e	; 0xb9e <atof>
     15c:	9b 01       	movw	r18, r22
     15e:	ac 01       	movw	r20, r24
     160:	c7 01       	movw	r24, r14
     162:	b6 01       	movw	r22, r12
     164:	0e 94 08 04 	call	0x810	; 0x810 <__divsf3>
		lcd_dipaly_real_number(num);
     168:	0e 94 6f 02 	call	0x4de	; 0x4de <lcd_dipaly_real_number>
	}
	
     16c:	cf 91       	pop	r28
     16e:	1f 91       	pop	r17
     170:	0f 91       	pop	r16
     172:	ff 90       	pop	r15
     174:	ef 90       	pop	r14
     176:	df 90       	pop	r13
     178:	cf 90       	pop	r12
     17a:	08 95       	ret

0000017c <keypad_init>:
int keypad_r[] = {R0,R1,R2,R3};
int keypad_c[] = {C0,C1,C2,C3};
	

void keypad_init(){
	keypad_PORT_dir &= ~((1<<R0) | (1<<R1) | (1<<R2) | (1<<R3));
     17c:	81 b3       	in	r24, 0x11	; 17
     17e:	80 7f       	andi	r24, 0xF0	; 240
     180:	81 bb       	out	0x11, r24	; 17
	keypad_PORT_dir |= ((1<<C0) | (1<<C1) | (1<<C2) | (1<<C3));
     182:	81 b3       	in	r24, 0x11	; 17
     184:	80 6f       	ori	r24, 0xF0	; 240
     186:	81 bb       	out	0x11, r24	; 17
	keypad_PORT = 0xFF;
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	82 bb       	out	0x12, r24	; 18
     18c:	08 95       	ret

0000018e <keypad_get_char>:
}

char keypad_get_char(){
     18e:	0f 93       	push	r16
     190:	1f 93       	push	r17
     192:	cf 93       	push	r28
     194:	df 93       	push	r29
	int i,j;
	for(i=0; i<4; i++){
     196:	40 e0       	ldi	r20, 0x00	; 0
     198:	50 e0       	ldi	r21, 0x00	; 0
     19a:	9d c0       	rjmp	.+314    	; 0x2d6 <keypad_get_char+0x148>
		keypad_PORT |= ((1<<keypad_c[0]) | (1<<keypad_c[1]) | (1<<keypad_c[2]) | (1<<keypad_c[3]));
     19c:	32 b3       	in	r19, 0x12	; 18
     19e:	e0 e6       	ldi	r30, 0x60	; 96
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	81 e0       	ldi	r24, 0x01	; 1
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	8c 01       	movw	r16, r24
     1a8:	00 80       	ld	r0, Z
     1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <keypad_get_char+0x22>
     1ac:	00 0f       	add	r16, r16
     1ae:	11 1f       	adc	r17, r17
     1b0:	0a 94       	dec	r0
     1b2:	e2 f7       	brpl	.-8      	; 0x1ac <keypad_get_char+0x1e>
     1b4:	ec 01       	movw	r28, r24
     1b6:	02 80       	ldd	r0, Z+2	; 0x02
     1b8:	02 c0       	rjmp	.+4      	; 0x1be <keypad_get_char+0x30>
     1ba:	cc 0f       	add	r28, r28
     1bc:	dd 1f       	adc	r29, r29
     1be:	0a 94       	dec	r0
     1c0:	e2 f7       	brpl	.-8      	; 0x1ba <keypad_get_char+0x2c>
     1c2:	dc 01       	movw	r26, r24
     1c4:	04 80       	ldd	r0, Z+4	; 0x04
     1c6:	02 c0       	rjmp	.+4      	; 0x1cc <keypad_get_char+0x3e>
     1c8:	aa 0f       	add	r26, r26
     1ca:	bb 1f       	adc	r27, r27
     1cc:	0a 94       	dec	r0
     1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <keypad_get_char+0x3a>
     1d0:	bc 01       	movw	r22, r24
     1d2:	06 80       	ldd	r0, Z+6	; 0x06
     1d4:	02 c0       	rjmp	.+4      	; 0x1da <keypad_get_char+0x4c>
     1d6:	66 0f       	add	r22, r22
     1d8:	77 1f       	adc	r23, r23
     1da:	0a 94       	dec	r0
     1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <keypad_get_char+0x48>
     1de:	2c 2f       	mov	r18, r28
     1e0:	20 2b       	or	r18, r16
     1e2:	2a 2b       	or	r18, r26
     1e4:	26 2b       	or	r18, r22
     1e6:	23 2b       	or	r18, r19
     1e8:	22 bb       	out	0x12, r18	; 18
		keypad_PORT &= ~(1<<keypad_c[i]);
     1ea:	22 b3       	in	r18, 0x12	; 18
     1ec:	fa 01       	movw	r30, r20
     1ee:	ee 0f       	add	r30, r30
     1f0:	ff 1f       	adc	r31, r31
     1f2:	e0 5a       	subi	r30, 0xA0	; 160
     1f4:	ff 4f       	sbci	r31, 0xFF	; 255
     1f6:	00 80       	ld	r0, Z
     1f8:	02 c0       	rjmp	.+4      	; 0x1fe <keypad_get_char+0x70>
     1fa:	88 0f       	add	r24, r24
     1fc:	99 1f       	adc	r25, r25
     1fe:	0a 94       	dec	r0
     200:	e2 f7       	brpl	.-8      	; 0x1fa <keypad_get_char+0x6c>
     202:	80 95       	com	r24
     204:	82 23       	and	r24, r18
     206:	82 bb       	out	0x12, r24	; 18
		for(j=0; j<4; j++ ){
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	5e c0       	rjmp	.+188    	; 0x2ca <keypad_get_char+0x13c>
			if((keypad_PIN & (1<<keypad_r[j])) == 0){
     20e:	80 b3       	in	r24, 0x10	; 16
     210:	fb 01       	movw	r30, r22
     212:	ee 0f       	add	r30, r30
     214:	ff 1f       	adc	r31, r31
     216:	e8 59       	subi	r30, 0x98	; 152
     218:	ff 4f       	sbci	r31, 0xFF	; 255
     21a:	20 81       	ld	r18, Z
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	02 2e       	mov	r0, r18
     220:	02 c0       	rjmp	.+4      	; 0x226 <keypad_get_char+0x98>
     222:	95 95       	asr	r25
     224:	87 95       	ror	r24
     226:	0a 94       	dec	r0
     228:	e2 f7       	brpl	.-8      	; 0x222 <keypad_get_char+0x94>
     22a:	80 fd       	sbrc	r24, 0
     22c:	4c c0       	rjmp	.+152    	; 0x2c6 <keypad_get_char+0x138>
				while((keypad_PIN & (1<<keypad_r[j])) == 0);
     22e:	80 b3       	in	r24, 0x10	; 16
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	02 2e       	mov	r0, r18
     234:	02 c0       	rjmp	.+4      	; 0x23a <keypad_get_char+0xac>
     236:	95 95       	asr	r25
     238:	87 95       	ror	r24
     23a:	0a 94       	dec	r0
     23c:	e2 f7       	brpl	.-8      	; 0x236 <keypad_get_char+0xa8>
     23e:	80 ff       	sbrs	r24, 0
     240:	f6 cf       	rjmp	.-20     	; 0x22e <keypad_get_char+0xa0>
				switch(i){
     242:	41 30       	cpi	r20, 0x01	; 1
     244:	51 05       	cpc	r21, r1
     246:	c9 f0       	breq	.+50     	; 0x27a <keypad_get_char+0xec>
     248:	24 f4       	brge	.+8      	; 0x252 <keypad_get_char+0xc4>
     24a:	41 15       	cp	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	41 f0       	breq	.+16     	; 0x260 <keypad_get_char+0xd2>
     250:	3a c0       	rjmp	.+116    	; 0x2c6 <keypad_get_char+0x138>
     252:	42 30       	cpi	r20, 0x02	; 2
     254:	51 05       	cpc	r21, r1
     256:	f1 f0       	breq	.+60     	; 0x294 <keypad_get_char+0x106>
     258:	43 30       	cpi	r20, 0x03	; 3
     25a:	51 05       	cpc	r21, r1
     25c:	41 f1       	breq	.+80     	; 0x2ae <keypad_get_char+0x120>
     25e:	33 c0       	rjmp	.+102    	; 0x2c6 <keypad_get_char+0x138>
					case (0):
					if (j == 0) return '7';
     260:	61 15       	cp	r22, r1
     262:	71 05       	cpc	r23, r1
     264:	f1 f1       	breq	.+124    	; 0x2e2 <keypad_get_char+0x154>
					else if (j == 1) return '4';
     266:	61 30       	cpi	r22, 0x01	; 1
     268:	71 05       	cpc	r23, r1
     26a:	e9 f1       	breq	.+122    	; 0x2e6 <keypad_get_char+0x158>
					else if (j == 2) return '1';
     26c:	62 30       	cpi	r22, 0x02	; 2
     26e:	71 05       	cpc	r23, r1
     270:	e1 f1       	breq	.+120    	; 0x2ea <keypad_get_char+0x15c>
					else if (j == 3) return '?';
     272:	63 30       	cpi	r22, 0x03	; 3
     274:	71 05       	cpc	r23, r1
     276:	39 f5       	brne	.+78     	; 0x2c6 <keypad_get_char+0x138>
     278:	3a c0       	rjmp	.+116    	; 0x2ee <keypad_get_char+0x160>
					break;
					case (1):
					if (j == 0) return '8';
     27a:	61 15       	cp	r22, r1
     27c:	71 05       	cpc	r23, r1
     27e:	c9 f1       	breq	.+114    	; 0x2f2 <keypad_get_char+0x164>
					else if (j == 1) return '5';
     280:	61 30       	cpi	r22, 0x01	; 1
     282:	71 05       	cpc	r23, r1
     284:	c1 f1       	breq	.+112    	; 0x2f6 <keypad_get_char+0x168>
					else if (j == 2) return '2';
     286:	62 30       	cpi	r22, 0x02	; 2
     288:	71 05       	cpc	r23, r1
     28a:	b9 f1       	breq	.+110    	; 0x2fa <keypad_get_char+0x16c>
					else if (j == 3) return '0';
     28c:	63 30       	cpi	r22, 0x03	; 3
     28e:	71 05       	cpc	r23, r1
     290:	d1 f4       	brne	.+52     	; 0x2c6 <keypad_get_char+0x138>
     292:	35 c0       	rjmp	.+106    	; 0x2fe <keypad_get_char+0x170>
					break;
					case (2):
					if (j == 0) return '9';
     294:	61 15       	cp	r22, r1
     296:	71 05       	cpc	r23, r1
     298:	a1 f1       	breq	.+104    	; 0x302 <keypad_get_char+0x174>
					else if (j == 1) return '6';
     29a:	61 30       	cpi	r22, 0x01	; 1
     29c:	71 05       	cpc	r23, r1
     29e:	99 f1       	breq	.+102    	; 0x306 <keypad_get_char+0x178>
					else if (j == 2) return '3';
     2a0:	62 30       	cpi	r22, 0x02	; 2
     2a2:	71 05       	cpc	r23, r1
     2a4:	91 f1       	breq	.+100    	; 0x30a <keypad_get_char+0x17c>
					else if (j == 3) return '=';
     2a6:	63 30       	cpi	r22, 0x03	; 3
     2a8:	71 05       	cpc	r23, r1
     2aa:	69 f4       	brne	.+26     	; 0x2c6 <keypad_get_char+0x138>
     2ac:	30 c0       	rjmp	.+96     	; 0x30e <keypad_get_char+0x180>
					break;
					case (3):
					if (j == 0) return '/';
     2ae:	61 15       	cp	r22, r1
     2b0:	71 05       	cpc	r23, r1
     2b2:	79 f1       	breq	.+94     	; 0x312 <keypad_get_char+0x184>
					else if (j == 1) return '*';
     2b4:	61 30       	cpi	r22, 0x01	; 1
     2b6:	71 05       	cpc	r23, r1
     2b8:	71 f1       	breq	.+92     	; 0x316 <keypad_get_char+0x188>
					else if (j == 2) return '-';
     2ba:	62 30       	cpi	r22, 0x02	; 2
     2bc:	71 05       	cpc	r23, r1
     2be:	69 f1       	breq	.+90     	; 0x31a <keypad_get_char+0x18c>
					else if (j == 3) return '+';
     2c0:	63 30       	cpi	r22, 0x03	; 3
     2c2:	71 05       	cpc	r23, r1
     2c4:	61 f1       	breq	.+88     	; 0x31e <keypad_get_char+0x190>
char keypad_get_char(){
	int i,j;
	for(i=0; i<4; i++){
		keypad_PORT |= ((1<<keypad_c[0]) | (1<<keypad_c[1]) | (1<<keypad_c[2]) | (1<<keypad_c[3]));
		keypad_PORT &= ~(1<<keypad_c[i]);
		for(j=0; j<4; j++ ){
     2c6:	6f 5f       	subi	r22, 0xFF	; 255
     2c8:	7f 4f       	sbci	r23, 0xFF	; 255
     2ca:	64 30       	cpi	r22, 0x04	; 4
     2cc:	71 05       	cpc	r23, r1
     2ce:	0c f4       	brge	.+2      	; 0x2d2 <keypad_get_char+0x144>
     2d0:	9e cf       	rjmp	.-196    	; 0x20e <keypad_get_char+0x80>
	keypad_PORT = 0xFF;
}

char keypad_get_char(){
	int i,j;
	for(i=0; i<4; i++){
     2d2:	4f 5f       	subi	r20, 0xFF	; 255
     2d4:	5f 4f       	sbci	r21, 0xFF	; 255
     2d6:	44 30       	cpi	r20, 0x04	; 4
     2d8:	51 05       	cpc	r21, r1
     2da:	0c f4       	brge	.+2      	; 0x2de <keypad_get_char+0x150>
     2dc:	5f cf       	rjmp	.-322    	; 0x19c <keypad_get_char+0xe>
					break;
			}
		}
	}
  }
  return 'N';
     2de:	8e e4       	ldi	r24, 0x4E	; 78
     2e0:	1f c0       	rjmp	.+62     	; 0x320 <keypad_get_char+0x192>
		for(j=0; j<4; j++ ){
			if((keypad_PIN & (1<<keypad_r[j])) == 0){
				while((keypad_PIN & (1<<keypad_r[j])) == 0);
				switch(i){
					case (0):
					if (j == 0) return '7';
     2e2:	87 e3       	ldi	r24, 0x37	; 55
     2e4:	1d c0       	rjmp	.+58     	; 0x320 <keypad_get_char+0x192>
					else if (j == 1) return '4';
     2e6:	84 e3       	ldi	r24, 0x34	; 52
     2e8:	1b c0       	rjmp	.+54     	; 0x320 <keypad_get_char+0x192>
					else if (j == 2) return '1';
     2ea:	81 e3       	ldi	r24, 0x31	; 49
     2ec:	19 c0       	rjmp	.+50     	; 0x320 <keypad_get_char+0x192>
					else if (j == 3) return '?';
     2ee:	8f e3       	ldi	r24, 0x3F	; 63
     2f0:	17 c0       	rjmp	.+46     	; 0x320 <keypad_get_char+0x192>
					break;
					case (1):
					if (j == 0) return '8';
     2f2:	88 e3       	ldi	r24, 0x38	; 56
     2f4:	15 c0       	rjmp	.+42     	; 0x320 <keypad_get_char+0x192>
					else if (j == 1) return '5';
     2f6:	85 e3       	ldi	r24, 0x35	; 53
     2f8:	13 c0       	rjmp	.+38     	; 0x320 <keypad_get_char+0x192>
					else if (j == 2) return '2';
     2fa:	82 e3       	ldi	r24, 0x32	; 50
     2fc:	11 c0       	rjmp	.+34     	; 0x320 <keypad_get_char+0x192>
					else if (j == 3) return '0';
     2fe:	80 e3       	ldi	r24, 0x30	; 48
     300:	0f c0       	rjmp	.+30     	; 0x320 <keypad_get_char+0x192>
					break;
					case (2):
					if (j == 0) return '9';
     302:	89 e3       	ldi	r24, 0x39	; 57
     304:	0d c0       	rjmp	.+26     	; 0x320 <keypad_get_char+0x192>
					else if (j == 1) return '6';
     306:	86 e3       	ldi	r24, 0x36	; 54
     308:	0b c0       	rjmp	.+22     	; 0x320 <keypad_get_char+0x192>
					else if (j == 2) return '3';
     30a:	83 e3       	ldi	r24, 0x33	; 51
     30c:	09 c0       	rjmp	.+18     	; 0x320 <keypad_get_char+0x192>
					else if (j == 3) return '=';
     30e:	8d e3       	ldi	r24, 0x3D	; 61
     310:	07 c0       	rjmp	.+14     	; 0x320 <keypad_get_char+0x192>
					break;
					case (3):
					if (j == 0) return '/';
     312:	8f e2       	ldi	r24, 0x2F	; 47
     314:	05 c0       	rjmp	.+10     	; 0x320 <keypad_get_char+0x192>
					else if (j == 1) return '*';
     316:	8a e2       	ldi	r24, 0x2A	; 42
     318:	03 c0       	rjmp	.+6      	; 0x320 <keypad_get_char+0x192>
					else if (j == 2) return '-';
     31a:	8d e2       	ldi	r24, 0x2D	; 45
     31c:	01 c0       	rjmp	.+2      	; 0x320 <keypad_get_char+0x192>
					else if (j == 3) return '+';
     31e:	8b e2       	ldi	r24, 0x2B	; 43
			}
		}
	}
  }
  return 'N';
}
     320:	df 91       	pop	r29
     322:	cf 91       	pop	r28
     324:	1f 91       	pop	r17
     326:	0f 91       	pop	r16
     328:	08 95       	ret

0000032a <LCD_lcd_kick>:
void LCD_clear_screen(){
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
}

void LCD_lcd_kick(){
	LCD_CTRL |= (1 << EN_SWITCH);
     32a:	88 b3       	in	r24, 0x18	; 24
     32c:	88 60       	ori	r24, 0x08	; 8
     32e:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     330:	83 ed       	ldi	r24, 0xD3	; 211
     332:	90 e3       	ldi	r25, 0x30	; 48
     334:	01 97       	sbiw	r24, 0x01	; 1
     336:	f1 f7       	brne	.-4      	; 0x334 <LCD_lcd_kick+0xa>
     338:	00 c0       	rjmp	.+0      	; 0x33a <LCD_lcd_kick+0x10>
     33a:	00 00       	nop
	_delay_ms(50);
	LCD_CTRL &= ~(1 << EN_SWITCH);
     33c:	88 b3       	in	r24, 0x18	; 24
     33e:	87 7f       	andi	r24, 0xF7	; 247
     340:	88 bb       	out	0x18, r24	; 24
     342:	08 95       	ret

00000344 <LCD_check_lcd_isbusy>:
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);	
}

void LCD_check_lcd_isbusy(){
	DataDir_LCD_PORT &= ~(0xFF<<DATA_shift);
     344:	8a b3       	in	r24, 0x1a	; 26
     346:	8f 70       	andi	r24, 0x0F	; 15
     348:	8a bb       	out	0x1a, r24	; 26
	LCD_CTRL |= (1 << RW_SWITCH);
     34a:	88 b3       	in	r24, 0x18	; 24
     34c:	84 60       	ori	r24, 0x04	; 4
     34e:	88 bb       	out	0x18, r24	; 24
	LCD_CTRL &= ~(1 << RS_SWITCH);
     350:	88 b3       	in	r24, 0x18	; 24
     352:	8d 7f       	andi	r24, 0xFD	; 253
     354:	88 bb       	out	0x18, r24	; 24
	LCD_lcd_kick();
     356:	0e 94 95 01 	call	0x32a	; 0x32a <LCD_lcd_kick>
	DataDir_LCD_PORT |= (0xFF<<DATA_shift);
     35a:	8a b3       	in	r24, 0x1a	; 26
     35c:	80 6f       	ori	r24, 0xF0	; 240
     35e:	8a bb       	out	0x1a, r24	; 26
	LCD_CTRL &= ~(1 << RW_SWITCH);
     360:	88 b3       	in	r24, 0x18	; 24
     362:	8b 7f       	andi	r24, 0xFB	; 251
     364:	88 bb       	out	0x18, r24	; 24
     366:	08 95       	ret

00000368 <LCD_WRITE_COMMAND>:
	
}


void LCD_WRITE_COMMAND(unsigned char command){
     368:	cf 93       	push	r28
     36a:	c8 2f       	mov	r28, r24
	#ifdef EIGHT_BIT_MODE
		LCD_check_lcd_isbusy();
     36c:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_check_lcd_isbusy>
		LCD_PORT = command;
     370:	cb bb       	out	0x1b, r28	; 27
		LCD_CTRL &= ~((1 << RS_SWITCH) | (1<<RW_SWITCH)); 
     372:	88 b3       	in	r24, 0x18	; 24
     374:	89 7f       	andi	r24, 0xF9	; 249
     376:	88 bb       	out	0x18, r24	; 24
     378:	89 ef       	ldi	r24, 0xF9	; 249
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	01 97       	sbiw	r24, 0x01	; 1
     37e:	f1 f7       	brne	.-4      	; 0x37c <LCD_WRITE_COMMAND+0x14>
     380:	00 c0       	rjmp	.+0      	; 0x382 <LCD_WRITE_COMMAND+0x1a>
     382:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();
     384:	0e 94 95 01 	call	0x32a	; 0x32a <LCD_lcd_kick>
		LCD_lcd_kick ();
		LCD_PORT = (LCD_PORT & 0x0F) | (command << 4);
		LCD_CTRL &= ~ ((1<<RW_SWITCH)|(1<<RS_SWITCH));
		LCD_lcd_kick();
	#endif
}
     388:	cf 91       	pop	r28
     38a:	08 95       	ret

0000038c <LCD_clear_screen>:
#include "stdlib.h"
#include "stdio.h"


void LCD_clear_screen(){
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
     392:	08 95       	ret

00000394 <LCD_GOTO_XY>:
	LCD_CTRL |= (1 << EN_SWITCH);
	_delay_ms(50);
	LCD_CTRL &= ~(1 << EN_SWITCH);
}

void LCD_GOTO_XY(unsigned char line, unsigned char position){
     394:	cf 93       	push	r28
     396:	df 93       	push	r29
     398:	c8 2f       	mov	r28, r24
     39a:	d6 2f       	mov	r29, r22
	if (line == 1)
     39c:	81 30       	cpi	r24, 0x01	; 1
     39e:	31 f4       	brne	.+12     	; 0x3ac <LCD_GOTO_XY+0x18>
	{
		if (position < 16 && position >= 0)
     3a0:	60 31       	cpi	r22, 0x10	; 16
     3a2:	20 f4       	brcc	.+8      	; 0x3ac <LCD_GOTO_XY+0x18>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
     3a4:	80 e8       	ldi	r24, 0x80	; 128
     3a6:	86 0f       	add	r24, r22
     3a8:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
		}
	}
	if (line == 2)
     3ac:	c2 30       	cpi	r28, 0x02	; 2
     3ae:	31 f4       	brne	.+12     	; 0x3bc <LCD_GOTO_XY+0x28>
	{
		if (position < 16 && position >= 0)
     3b0:	d0 31       	cpi	r29, 0x10	; 16
     3b2:	20 f4       	brcc	.+8      	; 0x3bc <LCD_GOTO_XY+0x28>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
     3b4:	80 ec       	ldi	r24, 0xC0	; 192
     3b6:	8d 0f       	add	r24, r29
     3b8:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
		}
	}
}
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	08 95       	ret

000003c2 <LCD_INIT>:
     3c2:	87 e8       	ldi	r24, 0x87	; 135
     3c4:	93 e1       	ldi	r25, 0x13	; 19
     3c6:	01 97       	sbiw	r24, 0x01	; 1
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <LCD_INIT+0x4>
     3ca:	00 c0       	rjmp	.+0      	; 0x3cc <LCD_INIT+0xa>
     3cc:	00 00       	nop

void LCD_INIT(){
	_delay_ms(20);
	DataDir_LCD_CTRL |= (1<<EN_SWITCH | 1<<RS_SWITCH | 1<<RW_SWITCH);
     3ce:	87 b3       	in	r24, 0x17	; 23
     3d0:	8e 60       	ori	r24, 0x0E	; 14
     3d2:	87 bb       	out	0x17, r24	; 23
	LCD_CTRL &= ~ (1<<EN_SWITCH | 1<<RS_SWITCH | 1<<RW_SWITCH);
     3d4:	88 b3       	in	r24, 0x18	; 24
     3d6:	81 7f       	andi	r24, 0xF1	; 241
     3d8:	88 bb       	out	0x18, r24	; 24
	DataDir_LCD_PORT = 0xFF;
     3da:	8f ef       	ldi	r24, 0xFF	; 255
     3dc:	8a bb       	out	0x1a, r24	; 26
     3de:	85 ea       	ldi	r24, 0xA5	; 165
     3e0:	9e e0       	ldi	r25, 0x0E	; 14
     3e2:	01 97       	sbiw	r24, 0x01	; 1
     3e4:	f1 f7       	brne	.-4      	; 0x3e2 <LCD_INIT+0x20>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <LCD_INIT+0x26>
     3e8:	00 00       	nop
	_delay_ms(15);
	LCD_clear_screen();
     3ea:	0e 94 c6 01 	call	0x38c	; 0x38c <LCD_clear_screen>
	#ifdef EIGHT_BIT_MODE
	LCD_WRITE_COMMAND(LCD_FUNCTION_8BIT_2LINES);
     3ee:	88 e3       	ldi	r24, 0x38	; 56
     3f0:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
		//LCD_WRITE_COMMAND(0x06);              /* Increment cursor (shift cursor to right)*/
		//LCD_WRITE_COMMAND(0x01);
	LCD_WRITE_COMMAND(0x02);
	LCD_WRITE_COMMAND(LCD_FUNCTION_4BIT_2LINES);
	#endif
	LCD_WRITE_COMMAND(LCD_ENTRY_MODE);
     3f4:	86 e0       	ldi	r24, 0x06	; 6
     3f6:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
     3fa:	80 e8       	ldi	r24, 0x80	; 128
     3fc:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);	
     400:	8f e0       	ldi	r24, 0x0F	; 15
     402:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
     406:	08 95       	ret

00000408 <LCD_WRITE_CHAR>:
		LCD_CTRL &= ~ ((1<<RW_SWITCH)|(1<<RS_SWITCH));
		LCD_lcd_kick();
	#endif
}

void LCD_WRITE_CHAR(unsigned char character){
     408:	cf 93       	push	r28
     40a:	c8 2f       	mov	r28, r24
	#ifdef EIGHT_BIT_MODE
		LCD_check_lcd_isbusy();
     40c:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_check_lcd_isbusy>
		LCD_PORT = character;
     410:	cb bb       	out	0x1b, r28	; 27
		LCD_CTRL &= ~(1 << RW_SWITCH);
     412:	88 b3       	in	r24, 0x18	; 24
     414:	8b 7f       	andi	r24, 0xFB	; 251
     416:	88 bb       	out	0x18, r24	; 24
		LCD_CTRL |= (1 << RS_SWITCH);
     418:	88 b3       	in	r24, 0x18	; 24
     41a:	82 60       	ori	r24, 0x02	; 2
     41c:	88 bb       	out	0x18, r24	; 24
     41e:	89 ef       	ldi	r24, 0xF9	; 249
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	01 97       	sbiw	r24, 0x01	; 1
     424:	f1 f7       	brne	.-4      	; 0x422 <LCD_WRITE_CHAR+0x1a>
     426:	00 c0       	rjmp	.+0      	; 0x428 <LCD_WRITE_CHAR+0x20>
     428:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();
     42a:	0e 94 95 01 	call	0x32a	; 0x32a <LCD_lcd_kick>
		LCD_PORT = (LCD_PORT & 0x0F) | (character << 4);
		LCD_CTRL |= 1<<RS_SWITCH; //turn RS ON for Data mode.
		LCD_CTRL &= ~ (1<<RW_SWITCH);//turn RW off so you can write.
		LCD_lcd_kick ();
	#endif
}
     42e:	cf 91       	pop	r28
     430:	08 95       	ret

00000432 <LCD_WRITE_STRING>:

void LCD_WRITE_STRING(char* string){
     432:	0f 93       	push	r16
     434:	1f 93       	push	r17
     436:	cf 93       	push	r28
     438:	df 93       	push	r29
     43a:	8c 01       	movw	r16, r24
	int count = 0;
     43c:	c0 e0       	ldi	r28, 0x00	; 0
     43e:	d0 e0       	ldi	r29, 0x00	; 0
	while (*string > 0){
     440:	18 c0       	rjmp	.+48     	; 0x472 <LCD_WRITE_STRING+0x40>
		count++;
     442:	21 96       	adiw	r28, 0x01	; 1
		LCD_WRITE_CHAR(*string++);
     444:	0f 5f       	subi	r16, 0xFF	; 255
     446:	1f 4f       	sbci	r17, 0xFF	; 255
     448:	0e 94 04 02 	call	0x408	; 0x408 <LCD_WRITE_CHAR>
		if (count == 16)
     44c:	c0 31       	cpi	r28, 0x10	; 16
     44e:	d1 05       	cpc	r29, r1
     450:	29 f4       	brne	.+10     	; 0x45c <LCD_WRITE_STRING+0x2a>
		{
			LCD_GOTO_XY(2,0);
     452:	60 e0       	ldi	r22, 0x00	; 0
     454:	82 e0       	ldi	r24, 0x02	; 2
     456:	0e 94 ca 01 	call	0x394	; 0x394 <LCD_GOTO_XY>
     45a:	0b c0       	rjmp	.+22     	; 0x472 <LCD_WRITE_STRING+0x40>
		}
		else if (count == 32)
     45c:	c0 32       	cpi	r28, 0x20	; 32
     45e:	d1 05       	cpc	r29, r1
     460:	41 f4       	brne	.+16     	; 0x472 <LCD_WRITE_STRING+0x40>
		{
			LCD_clear_screen();
     462:	0e 94 c6 01 	call	0x38c	; 0x38c <LCD_clear_screen>
			LCD_GOTO_XY(1,0);
     466:	60 e0       	ldi	r22, 0x00	; 0
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	0e 94 ca 01 	call	0x394	; 0x394 <LCD_GOTO_XY>
			count = 0;
     46e:	c0 e0       	ldi	r28, 0x00	; 0
     470:	d0 e0       	ldi	r29, 0x00	; 0
	#endif
}

void LCD_WRITE_STRING(char* string){
	int count = 0;
	while (*string > 0){
     472:	f8 01       	movw	r30, r16
     474:	80 81       	ld	r24, Z
     476:	81 11       	cpse	r24, r1
     478:	e4 cf       	rjmp	.-56     	; 0x442 <LCD_WRITE_STRING+0x10>
			LCD_clear_screen();
			LCD_GOTO_XY(1,0);
			count = 0;
		}
	}
}
     47a:	df 91       	pop	r29
     47c:	cf 91       	pop	r28
     47e:	1f 91       	pop	r17
     480:	0f 91       	pop	r16
     482:	08 95       	ret

00000484 <lcd_dipaly_number>:
void lcd_dipaly_number(int number){
     484:	0f 93       	push	r16
     486:	1f 93       	push	r17
     488:	cf 93       	push	r28
     48a:	df 93       	push	r29
     48c:	cd b7       	in	r28, 0x3d	; 61
     48e:	de b7       	in	r29, 0x3e	; 62
     490:	60 97       	sbiw	r28, 0x10	; 16
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
		char str[16];
		sprintf(str,"%d",number);
     49c:	9f 93       	push	r25
     49e:	8f 93       	push	r24
     4a0:	80 e7       	ldi	r24, 0x70	; 112
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	9f 93       	push	r25
     4a6:	8f 93       	push	r24
     4a8:	8e 01       	movw	r16, r28
     4aa:	0f 5f       	subi	r16, 0xFF	; 255
     4ac:	1f 4f       	sbci	r17, 0xFF	; 255
     4ae:	1f 93       	push	r17
     4b0:	0f 93       	push	r16
     4b2:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <sprintf>
		LCD_WRITE_STRING(str);
     4b6:	c8 01       	movw	r24, r16
     4b8:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WRITE_STRING>
	}
     4bc:	0f 90       	pop	r0
     4be:	0f 90       	pop	r0
     4c0:	0f 90       	pop	r0
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	0f 90       	pop	r0
     4c8:	60 96       	adiw	r28, 0x10	; 16
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	f8 94       	cli
     4ce:	de bf       	out	0x3e, r29	; 62
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	cd bf       	out	0x3d, r28	; 61
     4d4:	df 91       	pop	r29
     4d6:	cf 91       	pop	r28
     4d8:	1f 91       	pop	r17
     4da:	0f 91       	pop	r16
     4dc:	08 95       	ret

000004de <lcd_dipaly_real_number>:

void lcd_dipaly_real_number(float number){
     4de:	8f 92       	push	r8
     4e0:	9f 92       	push	r9
     4e2:	af 92       	push	r10
     4e4:	bf 92       	push	r11
     4e6:	cf 92       	push	r12
     4e8:	df 92       	push	r13
     4ea:	ef 92       	push	r14
     4ec:	ff 92       	push	r15
     4ee:	0f 93       	push	r16
     4f0:	1f 93       	push	r17
     4f2:	cf 93       	push	r28
     4f4:	df 93       	push	r29
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
     4fa:	60 97       	sbiw	r28, 0x10	; 16
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	f8 94       	cli
     500:	de bf       	out	0x3e, r29	; 62
     502:	0f be       	out	0x3f, r0	; 63
     504:	cd bf       	out	0x3d, r28	; 61
     506:	6b 01       	movw	r12, r22
     508:	7c 01       	movw	r14, r24
		char strr[16];
		
		char *tmpsign = (number < 0) ? "-" : "";
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	a9 01       	movw	r20, r18
     510:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
     514:	88 23       	and	r24, r24
     516:	1c f4       	brge	.+6      	; 0x51e <lcd_dipaly_real_number+0x40>
     518:	03 e7       	ldi	r16, 0x73	; 115
     51a:	10 e0       	ldi	r17, 0x00	; 0
     51c:	02 c0       	rjmp	.+4      	; 0x522 <lcd_dipaly_real_number+0x44>
     51e:	04 e7       	ldi	r16, 0x74	; 116
     520:	10 e0       	ldi	r17, 0x00	; 0
		float tmpval = (number < 0) ? -number : number;
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	a9 01       	movw	r20, r18
     528:	c7 01       	movw	r24, r14
     52a:	b6 01       	movw	r22, r12
     52c:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
     530:	88 23       	and	r24, r24
     532:	24 f4       	brge	.+8      	; 0x53c <lcd_dipaly_real_number+0x5e>
     534:	f7 fa       	bst	r15, 7
     536:	f0 94       	com	r15
     538:	f7 f8       	bld	r15, 7
     53a:	f0 94       	com	r15
		
		int tmpint1 = tmpval;
     53c:	c7 01       	movw	r24, r14
     53e:	b6 01       	movw	r22, r12
     540:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixsfsi>
     544:	4b 01       	movw	r8, r22
     546:	5c 01       	movw	r10, r24
		float tmpfrac = tmpval - tmpint1;
     548:	07 2e       	mov	r0, r23
     54a:	00 0c       	add	r0, r0
     54c:	88 0b       	sbc	r24, r24
     54e:	99 0b       	sbc	r25, r25
     550:	0e 94 b2 04 	call	0x964	; 0x964 <__floatsisf>
     554:	9b 01       	movw	r18, r22
     556:	ac 01       	movw	r20, r24
     558:	c7 01       	movw	r24, r14
     55a:	b6 01       	movw	r22, r12
     55c:	0e 94 96 03 	call	0x72c	; 0x72c <__subsf3>
		int tmpint2 = tmpfrac * 1000;
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	4a e7       	ldi	r20, 0x7A	; 122
     566:	54 e4       	ldi	r21, 0x44	; 68
     568:	0e 94 62 05 	call	0xac4	; 0xac4 <__mulsf3>
     56c:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fixsfsi>
		
		sprintf(strr,"%s%d.%03d",tmpsign,tmpint1,tmpint2);
     570:	7f 93       	push	r23
     572:	6f 93       	push	r22
     574:	9f 92       	push	r9
     576:	8f 92       	push	r8
     578:	1f 93       	push	r17
     57a:	0f 93       	push	r16
     57c:	85 e7       	ldi	r24, 0x75	; 117
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	9f 93       	push	r25
     582:	8f 93       	push	r24
     584:	8e 01       	movw	r16, r28
     586:	0f 5f       	subi	r16, 0xFF	; 255
     588:	1f 4f       	sbci	r17, 0xFF	; 255
     58a:	1f 93       	push	r17
     58c:	0f 93       	push	r16
     58e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <sprintf>
		
		LCD_WRITE_STRING(strr);
     592:	c8 01       	movw	r24, r16
     594:	0e 94 19 02 	call	0x432	; 0x432 <LCD_WRITE_STRING>
     598:	0f b6       	in	r0, 0x3f	; 63
     59a:	f8 94       	cli
     59c:	de bf       	out	0x3e, r29	; 62
     59e:	0f be       	out	0x3f, r0	; 63
     5a0:	cd bf       	out	0x3d, r28	; 61
     5a2:	60 96       	adiw	r28, 0x10	; 16
     5a4:	0f b6       	in	r0, 0x3f	; 63
     5a6:	f8 94       	cli
     5a8:	de bf       	out	0x3e, r29	; 62
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	cd bf       	out	0x3d, r28	; 61
     5ae:	df 91       	pop	r29
     5b0:	cf 91       	pop	r28
     5b2:	1f 91       	pop	r17
     5b4:	0f 91       	pop	r16
     5b6:	ff 90       	pop	r15
     5b8:	ef 90       	pop	r14
     5ba:	df 90       	pop	r13
     5bc:	cf 90       	pop	r12
     5be:	bf 90       	pop	r11
     5c0:	af 90       	pop	r10
     5c2:	9f 90       	pop	r9
     5c4:	8f 90       	pop	r8
     5c6:	08 95       	ret

000005c8 <main>:
int flag=0;


int main(void)
{
   LCD_INIT();
     5c8:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_INIT>
     5cc:	83 ed       	ldi	r24, 0xD3	; 211
     5ce:	90 e3       	ldi	r25, 0x30	; 48
     5d0:	01 97       	sbiw	r24, 0x01	; 1
     5d2:	f1 f7       	brne	.-4      	; 0x5d0 <main+0x8>
     5d4:	00 c0       	rjmp	.+0      	; 0x5d6 <main+0xe>
     5d6:	00 00       	nop
    _delay_ms(50);
   keypad_init();
     5d8:	0e 94 be 00 	call	0x17c	; 0x17c <keypad_init>
 
   char pressed_char;
    while (1) 
    {
		pressed_char = keypad_get_char();
     5dc:	0e 94 c7 00 	call	0x18e	; 0x18e <keypad_get_char>
     5e0:	c8 2f       	mov	r28, r24
		if(pressed_char == '?'){
     5e2:	8f 33       	cpi	r24, 0x3F	; 63
     5e4:	19 f5       	brne	.+70     	; 0x62c <main+0x64>
			LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	0e 94 b4 01 	call	0x368	; 0x368 <LCD_WRITE_COMMAND>
			LCD_GOTO_XY(1,0);
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	0e 94 ca 01 	call	0x394	; 0x394 <LCD_GOTO_XY>
			for(int i=0; i<16; i++){
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	09 c0       	rjmp	.+18     	; 0x60c <main+0x44>
				operand1[i] ='\0';
     5fa:	fc 01       	movw	r30, r24
     5fc:	ea 56       	subi	r30, 0x6A	; 106
     5fe:	ff 4f       	sbci	r31, 0xFF	; 255
     600:	10 82       	st	Z, r1
				operand2[i] ='\0';
     602:	fc 01       	movw	r30, r24
     604:	ea 57       	subi	r30, 0x7A	; 122
     606:	ff 4f       	sbci	r31, 0xFF	; 255
     608:	10 82       	st	Z, r1
    {
		pressed_char = keypad_get_char();
		if(pressed_char == '?'){
			LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
			LCD_GOTO_XY(1,0);
			for(int i=0; i<16; i++){
     60a:	01 96       	adiw	r24, 0x01	; 1
     60c:	80 31       	cpi	r24, 0x10	; 16
     60e:	91 05       	cpc	r25, r1
     610:	a4 f3       	brlt	.-24     	; 0x5fa <main+0x32>
				operand1[i] ='\0';
				operand2[i] ='\0';
			}
			count1=0;
     612:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <count1+0x1>
     616:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <count1>
			count2=0;
     61a:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <count2+0x1>
     61e:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <count2>
			flag=0;
     622:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x1>
     626:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
     62a:	d8 cf       	rjmp	.-80     	; 0x5dc <main+0x14>
    }
	else if(pressed_char == 'N'){
     62c:	8e 34       	cpi	r24, 0x4E	; 78
     62e:	b1 f2       	breq	.-84     	; 0x5dc <main+0x14>
		
	}
	
   else if((pressed_char == '+') | (pressed_char == '-')| (pressed_char == '*')|(pressed_char == '/')){
     630:	91 e0       	ldi	r25, 0x01	; 1
     632:	8b 32       	cpi	r24, 0x2B	; 43
     634:	09 f0       	breq	.+2      	; 0x638 <main+0x70>
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	cd 32       	cpi	r28, 0x2D	; 45
     63c:	09 f0       	breq	.+2      	; 0x640 <main+0x78>
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	98 2b       	or	r25, r24
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	ca 32       	cpi	r28, 0x2A	; 42
     646:	09 f0       	breq	.+2      	; 0x64a <main+0x82>
     648:	80 e0       	ldi	r24, 0x00	; 0
     64a:	21 e0       	ldi	r18, 0x01	; 1
     64c:	cf 32       	cpi	r28, 0x2F	; 47
     64e:	09 f0       	breq	.+2      	; 0x652 <main+0x8a>
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	89 2b       	or	r24, r25
     654:	11 f4       	brne	.+4      	; 0x65a <main+0x92>
     656:	22 23       	and	r18, r18
     658:	91 f0       	breq	.+36     	; 0x67e <main+0xb6>
	LCD_WRITE_CHAR(pressed_char);
     65a:	8c 2f       	mov	r24, r28
     65c:	0e 94 04 02 	call	0x408	; 0x408 <LCD_WRITE_CHAR>
     660:	89 ef       	ldi	r24, 0xF9	; 249
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	f1 f7       	brne	.-4      	; 0x664 <main+0x9c>
     668:	00 c0       	rjmp	.+0      	; 0x66a <main+0xa2>
     66a:	00 00       	nop
	_delay_ms(1);
	flag =1;
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__data_end+0x1>
     674:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
	process = pressed_char;
     678:	c0 93 a6 00 	sts	0x00A6, r28	; 0x8000a6 <process>
     67c:	af cf       	rjmp	.-162    	; 0x5dc <main+0x14>
	}
	else if(pressed_char == '='){
     67e:	cd 33       	cpi	r28, 0x3D	; 61
     680:	f1 f4       	brne	.+60     	; 0x6be <main+0xf6>
		LCD_WRITE_CHAR(pressed_char);
     682:	8c 2f       	mov	r24, r28
     684:	0e 94 04 02 	call	0x408	; 0x408 <LCD_WRITE_CHAR>
     688:	89 ef       	ldi	r24, 0xF9	; 249
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	01 97       	sbiw	r24, 0x01	; 1
     68e:	f1 f7       	brne	.-4      	; 0x68c <main+0xc4>
     690:	00 c0       	rjmp	.+0      	; 0x692 <main+0xca>
     692:	00 00       	nop
		_delay_ms(1);
		calculate(operand1,operand2,process);
     694:	40 91 a6 00 	lds	r20, 0x00A6	; 0x8000a6 <process>
     698:	66 e8       	ldi	r22, 0x86	; 134
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	86 e9       	ldi	r24, 0x96	; 150
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	0e 94 67 00 	call	0xce	; 0xce <calculate>
		count1 =0;
     6a4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <count1+0x1>
     6a8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <count1>
		count2=0;
     6ac:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <count2+0x1>
     6b0:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <count2>
		flag=0;
     6b4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x1>
     6b8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
     6bc:	8f cf       	rjmp	.-226    	; 0x5dc <main+0x14>
	}
	else{
		if(flag == 0){
     6be:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end>
     6c2:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__data_end+0x1>
     6c6:	00 97       	sbiw	r24, 0x00	; 0
     6c8:	b9 f4       	brne	.+46     	; 0x6f8 <main+0x130>
			LCD_WRITE_CHAR(pressed_char);
     6ca:	8c 2f       	mov	r24, r28
     6cc:	0e 94 04 02 	call	0x408	; 0x408 <LCD_WRITE_CHAR>
     6d0:	89 ef       	ldi	r24, 0xF9	; 249
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	01 97       	sbiw	r24, 0x01	; 1
     6d6:	f1 f7       	brne	.-4      	; 0x6d4 <main+0x10c>
     6d8:	00 c0       	rjmp	.+0      	; 0x6da <main+0x112>
     6da:	00 00       	nop
			_delay_ms(1);
			operand1[count1] = pressed_char;
     6dc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <count1>
     6e0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <count1+0x1>
     6e4:	fc 01       	movw	r30, r24
     6e6:	ea 56       	subi	r30, 0x6A	; 106
     6e8:	ff 4f       	sbci	r31, 0xFF	; 255
     6ea:	c0 83       	st	Z, r28
			count1++;
     6ec:	01 96       	adiw	r24, 0x01	; 1
     6ee:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <count1+0x1>
     6f2:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <count1>
     6f6:	72 cf       	rjmp	.-284    	; 0x5dc <main+0x14>
		}
		else if(flag == 1){
     6f8:	01 97       	sbiw	r24, 0x01	; 1
     6fa:	09 f0       	breq	.+2      	; 0x6fe <main+0x136>
     6fc:	6f cf       	rjmp	.-290    	; 0x5dc <main+0x14>
			LCD_WRITE_CHAR(pressed_char);
     6fe:	8c 2f       	mov	r24, r28
     700:	0e 94 04 02 	call	0x408	; 0x408 <LCD_WRITE_CHAR>
     704:	89 ef       	ldi	r24, 0xF9	; 249
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	f1 f7       	brne	.-4      	; 0x708 <main+0x140>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <main+0x146>
     70e:	00 00       	nop
			_delay_ms(1);
			operand2[count2] = pressed_char;
     710:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <count2>
     714:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <count2+0x1>
     718:	fc 01       	movw	r30, r24
     71a:	ea 57       	subi	r30, 0x7A	; 122
     71c:	ff 4f       	sbci	r31, 0xFF	; 255
     71e:	c0 83       	st	Z, r28
			count2++;
     720:	01 96       	adiw	r24, 0x01	; 1
     722:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <count2+0x1>
     726:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <count2>
     72a:	58 cf       	rjmp	.-336    	; 0x5dc <main+0x14>

0000072c <__subsf3>:
     72c:	50 58       	subi	r21, 0x80	; 128

0000072e <__addsf3>:
     72e:	bb 27       	eor	r27, r27
     730:	aa 27       	eor	r26, r26
     732:	0e 94 ae 03 	call	0x75c	; 0x75c <__addsf3x>
     736:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_round>
     73a:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_pscA>
     73e:	38 f0       	brcs	.+14     	; 0x74e <__addsf3+0x20>
     740:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_pscB>
     744:	20 f0       	brcs	.+8      	; 0x74e <__addsf3+0x20>
     746:	39 f4       	brne	.+14     	; 0x756 <__addsf3+0x28>
     748:	9f 3f       	cpi	r25, 0xFF	; 255
     74a:	19 f4       	brne	.+6      	; 0x752 <__addsf3+0x24>
     74c:	26 f4       	brtc	.+8      	; 0x756 <__addsf3+0x28>
     74e:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>
     752:	0e f4       	brtc	.+2      	; 0x756 <__addsf3+0x28>
     754:	e0 95       	com	r30
     756:	e7 fb       	bst	r30, 7
     758:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>

0000075c <__addsf3x>:
     75c:	e9 2f       	mov	r30, r25
     75e:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_split3>
     762:	58 f3       	brcs	.-42     	; 0x73a <__addsf3+0xc>
     764:	ba 17       	cp	r27, r26
     766:	62 07       	cpc	r22, r18
     768:	73 07       	cpc	r23, r19
     76a:	84 07       	cpc	r24, r20
     76c:	95 07       	cpc	r25, r21
     76e:	20 f0       	brcs	.+8      	; 0x778 <__addsf3x+0x1c>
     770:	79 f4       	brne	.+30     	; 0x790 <__addsf3x+0x34>
     772:	a6 f5       	brtc	.+104    	; 0x7dc <__addsf3x+0x80>
     774:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_zero>
     778:	0e f4       	brtc	.+2      	; 0x77c <__addsf3x+0x20>
     77a:	e0 95       	com	r30
     77c:	0b 2e       	mov	r0, r27
     77e:	ba 2f       	mov	r27, r26
     780:	a0 2d       	mov	r26, r0
     782:	0b 01       	movw	r0, r22
     784:	b9 01       	movw	r22, r18
     786:	90 01       	movw	r18, r0
     788:	0c 01       	movw	r0, r24
     78a:	ca 01       	movw	r24, r20
     78c:	a0 01       	movw	r20, r0
     78e:	11 24       	eor	r1, r1
     790:	ff 27       	eor	r31, r31
     792:	59 1b       	sub	r21, r25
     794:	99 f0       	breq	.+38     	; 0x7bc <__addsf3x+0x60>
     796:	59 3f       	cpi	r21, 0xF9	; 249
     798:	50 f4       	brcc	.+20     	; 0x7ae <__addsf3x+0x52>
     79a:	50 3e       	cpi	r21, 0xE0	; 224
     79c:	68 f1       	brcs	.+90     	; 0x7f8 <__addsf3x+0x9c>
     79e:	1a 16       	cp	r1, r26
     7a0:	f0 40       	sbci	r31, 0x00	; 0
     7a2:	a2 2f       	mov	r26, r18
     7a4:	23 2f       	mov	r18, r19
     7a6:	34 2f       	mov	r19, r20
     7a8:	44 27       	eor	r20, r20
     7aa:	58 5f       	subi	r21, 0xF8	; 248
     7ac:	f3 cf       	rjmp	.-26     	; 0x794 <__addsf3x+0x38>
     7ae:	46 95       	lsr	r20
     7b0:	37 95       	ror	r19
     7b2:	27 95       	ror	r18
     7b4:	a7 95       	ror	r26
     7b6:	f0 40       	sbci	r31, 0x00	; 0
     7b8:	53 95       	inc	r21
     7ba:	c9 f7       	brne	.-14     	; 0x7ae <__addsf3x+0x52>
     7bc:	7e f4       	brtc	.+30     	; 0x7dc <__addsf3x+0x80>
     7be:	1f 16       	cp	r1, r31
     7c0:	ba 0b       	sbc	r27, r26
     7c2:	62 0b       	sbc	r22, r18
     7c4:	73 0b       	sbc	r23, r19
     7c6:	84 0b       	sbc	r24, r20
     7c8:	ba f0       	brmi	.+46     	; 0x7f8 <__addsf3x+0x9c>
     7ca:	91 50       	subi	r25, 0x01	; 1
     7cc:	a1 f0       	breq	.+40     	; 0x7f6 <__addsf3x+0x9a>
     7ce:	ff 0f       	add	r31, r31
     7d0:	bb 1f       	adc	r27, r27
     7d2:	66 1f       	adc	r22, r22
     7d4:	77 1f       	adc	r23, r23
     7d6:	88 1f       	adc	r24, r24
     7d8:	c2 f7       	brpl	.-16     	; 0x7ca <__addsf3x+0x6e>
     7da:	0e c0       	rjmp	.+28     	; 0x7f8 <__addsf3x+0x9c>
     7dc:	ba 0f       	add	r27, r26
     7de:	62 1f       	adc	r22, r18
     7e0:	73 1f       	adc	r23, r19
     7e2:	84 1f       	adc	r24, r20
     7e4:	48 f4       	brcc	.+18     	; 0x7f8 <__addsf3x+0x9c>
     7e6:	87 95       	ror	r24
     7e8:	77 95       	ror	r23
     7ea:	67 95       	ror	r22
     7ec:	b7 95       	ror	r27
     7ee:	f7 95       	ror	r31
     7f0:	9e 3f       	cpi	r25, 0xFE	; 254
     7f2:	08 f0       	brcs	.+2      	; 0x7f6 <__addsf3x+0x9a>
     7f4:	b0 cf       	rjmp	.-160    	; 0x756 <__addsf3+0x28>
     7f6:	93 95       	inc	r25
     7f8:	88 0f       	add	r24, r24
     7fa:	08 f0       	brcs	.+2      	; 0x7fe <__addsf3x+0xa2>
     7fc:	99 27       	eor	r25, r25
     7fe:	ee 0f       	add	r30, r30
     800:	97 95       	ror	r25
     802:	87 95       	ror	r24
     804:	08 95       	ret

00000806 <__cmpsf2>:
     806:	0e 94 ed 04 	call	0x9da	; 0x9da <__fp_cmp>
     80a:	08 f4       	brcc	.+2      	; 0x80e <__cmpsf2+0x8>
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	08 95       	ret

00000810 <__divsf3>:
     810:	0e 94 1c 04 	call	0x838	; 0x838 <__divsf3x>
     814:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_round>
     818:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_pscB>
     81c:	58 f0       	brcs	.+22     	; 0x834 <__divsf3+0x24>
     81e:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_pscA>
     822:	40 f0       	brcs	.+16     	; 0x834 <__divsf3+0x24>
     824:	29 f4       	brne	.+10     	; 0x830 <__divsf3+0x20>
     826:	5f 3f       	cpi	r21, 0xFF	; 255
     828:	29 f0       	breq	.+10     	; 0x834 <__divsf3+0x24>
     82a:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     82e:	51 11       	cpse	r21, r1
     830:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     834:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>

00000838 <__divsf3x>:
     838:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_split3>
     83c:	68 f3       	brcs	.-38     	; 0x818 <__divsf3+0x8>

0000083e <__divsf3_pse>:
     83e:	99 23       	and	r25, r25
     840:	b1 f3       	breq	.-20     	; 0x82e <__divsf3+0x1e>
     842:	55 23       	and	r21, r21
     844:	91 f3       	breq	.-28     	; 0x82a <__divsf3+0x1a>
     846:	95 1b       	sub	r25, r21
     848:	55 0b       	sbc	r21, r21
     84a:	bb 27       	eor	r27, r27
     84c:	aa 27       	eor	r26, r26
     84e:	62 17       	cp	r22, r18
     850:	73 07       	cpc	r23, r19
     852:	84 07       	cpc	r24, r20
     854:	38 f0       	brcs	.+14     	; 0x864 <__stack+0x5>
     856:	9f 5f       	subi	r25, 0xFF	; 255
     858:	5f 4f       	sbci	r21, 0xFF	; 255
     85a:	22 0f       	add	r18, r18
     85c:	33 1f       	adc	r19, r19
     85e:	44 1f       	adc	r20, r20
     860:	aa 1f       	adc	r26, r26
     862:	a9 f3       	breq	.-22     	; 0x84e <__divsf3_pse+0x10>
     864:	35 d0       	rcall	.+106    	; 0x8d0 <__stack+0x71>
     866:	0e 2e       	mov	r0, r30
     868:	3a f0       	brmi	.+14     	; 0x878 <__stack+0x19>
     86a:	e0 e8       	ldi	r30, 0x80	; 128
     86c:	32 d0       	rcall	.+100    	; 0x8d2 <__stack+0x73>
     86e:	91 50       	subi	r25, 0x01	; 1
     870:	50 40       	sbci	r21, 0x00	; 0
     872:	e6 95       	lsr	r30
     874:	00 1c       	adc	r0, r0
     876:	ca f7       	brpl	.-14     	; 0x86a <__stack+0xb>
     878:	2b d0       	rcall	.+86     	; 0x8d0 <__stack+0x71>
     87a:	fe 2f       	mov	r31, r30
     87c:	29 d0       	rcall	.+82     	; 0x8d0 <__stack+0x71>
     87e:	66 0f       	add	r22, r22
     880:	77 1f       	adc	r23, r23
     882:	88 1f       	adc	r24, r24
     884:	bb 1f       	adc	r27, r27
     886:	26 17       	cp	r18, r22
     888:	37 07       	cpc	r19, r23
     88a:	48 07       	cpc	r20, r24
     88c:	ab 07       	cpc	r26, r27
     88e:	b0 e8       	ldi	r27, 0x80	; 128
     890:	09 f0       	breq	.+2      	; 0x894 <__stack+0x35>
     892:	bb 0b       	sbc	r27, r27
     894:	80 2d       	mov	r24, r0
     896:	bf 01       	movw	r22, r30
     898:	ff 27       	eor	r31, r31
     89a:	93 58       	subi	r25, 0x83	; 131
     89c:	5f 4f       	sbci	r21, 0xFF	; 255
     89e:	3a f0       	brmi	.+14     	; 0x8ae <__stack+0x4f>
     8a0:	9e 3f       	cpi	r25, 0xFE	; 254
     8a2:	51 05       	cpc	r21, r1
     8a4:	78 f0       	brcs	.+30     	; 0x8c4 <__stack+0x65>
     8a6:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     8aa:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     8ae:	5f 3f       	cpi	r21, 0xFF	; 255
     8b0:	e4 f3       	brlt	.-8      	; 0x8aa <__stack+0x4b>
     8b2:	98 3e       	cpi	r25, 0xE8	; 232
     8b4:	d4 f3       	brlt	.-12     	; 0x8aa <__stack+0x4b>
     8b6:	86 95       	lsr	r24
     8b8:	77 95       	ror	r23
     8ba:	67 95       	ror	r22
     8bc:	b7 95       	ror	r27
     8be:	f7 95       	ror	r31
     8c0:	9f 5f       	subi	r25, 0xFF	; 255
     8c2:	c9 f7       	brne	.-14     	; 0x8b6 <__stack+0x57>
     8c4:	88 0f       	add	r24, r24
     8c6:	91 1d       	adc	r25, r1
     8c8:	96 95       	lsr	r25
     8ca:	87 95       	ror	r24
     8cc:	97 f9       	bld	r25, 7
     8ce:	08 95       	ret
     8d0:	e1 e0       	ldi	r30, 0x01	; 1
     8d2:	66 0f       	add	r22, r22
     8d4:	77 1f       	adc	r23, r23
     8d6:	88 1f       	adc	r24, r24
     8d8:	bb 1f       	adc	r27, r27
     8da:	62 17       	cp	r22, r18
     8dc:	73 07       	cpc	r23, r19
     8de:	84 07       	cpc	r24, r20
     8e0:	ba 07       	cpc	r27, r26
     8e2:	20 f0       	brcs	.+8      	; 0x8ec <__stack+0x8d>
     8e4:	62 1b       	sub	r22, r18
     8e6:	73 0b       	sbc	r23, r19
     8e8:	84 0b       	sbc	r24, r20
     8ea:	ba 0b       	sbc	r27, r26
     8ec:	ee 1f       	adc	r30, r30
     8ee:	88 f7       	brcc	.-30     	; 0x8d2 <__stack+0x73>
     8f0:	e0 95       	com	r30
     8f2:	08 95       	ret

000008f4 <__fixsfsi>:
     8f4:	0e 94 81 04 	call	0x902	; 0x902 <__fixunssfsi>
     8f8:	68 94       	set
     8fa:	b1 11       	cpse	r27, r1
     8fc:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     900:	08 95       	ret

00000902 <__fixunssfsi>:
     902:	0e 94 41 05 	call	0xa82	; 0xa82 <__fp_splitA>
     906:	88 f0       	brcs	.+34     	; 0x92a <__fixunssfsi+0x28>
     908:	9f 57       	subi	r25, 0x7F	; 127
     90a:	98 f0       	brcs	.+38     	; 0x932 <__fixunssfsi+0x30>
     90c:	b9 2f       	mov	r27, r25
     90e:	99 27       	eor	r25, r25
     910:	b7 51       	subi	r27, 0x17	; 23
     912:	b0 f0       	brcs	.+44     	; 0x940 <__fixunssfsi+0x3e>
     914:	e1 f0       	breq	.+56     	; 0x94e <__fixunssfsi+0x4c>
     916:	66 0f       	add	r22, r22
     918:	77 1f       	adc	r23, r23
     91a:	88 1f       	adc	r24, r24
     91c:	99 1f       	adc	r25, r25
     91e:	1a f0       	brmi	.+6      	; 0x926 <__fixunssfsi+0x24>
     920:	ba 95       	dec	r27
     922:	c9 f7       	brne	.-14     	; 0x916 <__fixunssfsi+0x14>
     924:	14 c0       	rjmp	.+40     	; 0x94e <__fixunssfsi+0x4c>
     926:	b1 30       	cpi	r27, 0x01	; 1
     928:	91 f0       	breq	.+36     	; 0x94e <__fixunssfsi+0x4c>
     92a:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_zero>
     92e:	b1 e0       	ldi	r27, 0x01	; 1
     930:	08 95       	ret
     932:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_zero>
     936:	67 2f       	mov	r22, r23
     938:	78 2f       	mov	r23, r24
     93a:	88 27       	eor	r24, r24
     93c:	b8 5f       	subi	r27, 0xF8	; 248
     93e:	39 f0       	breq	.+14     	; 0x94e <__fixunssfsi+0x4c>
     940:	b9 3f       	cpi	r27, 0xF9	; 249
     942:	cc f3       	brlt	.-14     	; 0x936 <__fixunssfsi+0x34>
     944:	86 95       	lsr	r24
     946:	77 95       	ror	r23
     948:	67 95       	ror	r22
     94a:	b3 95       	inc	r27
     94c:	d9 f7       	brne	.-10     	; 0x944 <__fixunssfsi+0x42>
     94e:	3e f4       	brtc	.+14     	; 0x95e <__fixunssfsi+0x5c>
     950:	90 95       	com	r25
     952:	80 95       	com	r24
     954:	70 95       	com	r23
     956:	61 95       	neg	r22
     958:	7f 4f       	sbci	r23, 0xFF	; 255
     95a:	8f 4f       	sbci	r24, 0xFF	; 255
     95c:	9f 4f       	sbci	r25, 0xFF	; 255
     95e:	08 95       	ret

00000960 <__floatunsisf>:
     960:	e8 94       	clt
     962:	09 c0       	rjmp	.+18     	; 0x976 <__floatsisf+0x12>

00000964 <__floatsisf>:
     964:	97 fb       	bst	r25, 7
     966:	3e f4       	brtc	.+14     	; 0x976 <__floatsisf+0x12>
     968:	90 95       	com	r25
     96a:	80 95       	com	r24
     96c:	70 95       	com	r23
     96e:	61 95       	neg	r22
     970:	7f 4f       	sbci	r23, 0xFF	; 255
     972:	8f 4f       	sbci	r24, 0xFF	; 255
     974:	9f 4f       	sbci	r25, 0xFF	; 255
     976:	99 23       	and	r25, r25
     978:	a9 f0       	breq	.+42     	; 0x9a4 <__floatsisf+0x40>
     97a:	f9 2f       	mov	r31, r25
     97c:	96 e9       	ldi	r25, 0x96	; 150
     97e:	bb 27       	eor	r27, r27
     980:	93 95       	inc	r25
     982:	f6 95       	lsr	r31
     984:	87 95       	ror	r24
     986:	77 95       	ror	r23
     988:	67 95       	ror	r22
     98a:	b7 95       	ror	r27
     98c:	f1 11       	cpse	r31, r1
     98e:	f8 cf       	rjmp	.-16     	; 0x980 <__floatsisf+0x1c>
     990:	fa f4       	brpl	.+62     	; 0x9d0 <__floatsisf+0x6c>
     992:	bb 0f       	add	r27, r27
     994:	11 f4       	brne	.+4      	; 0x99a <__floatsisf+0x36>
     996:	60 ff       	sbrs	r22, 0
     998:	1b c0       	rjmp	.+54     	; 0x9d0 <__floatsisf+0x6c>
     99a:	6f 5f       	subi	r22, 0xFF	; 255
     99c:	7f 4f       	sbci	r23, 0xFF	; 255
     99e:	8f 4f       	sbci	r24, 0xFF	; 255
     9a0:	9f 4f       	sbci	r25, 0xFF	; 255
     9a2:	16 c0       	rjmp	.+44     	; 0x9d0 <__floatsisf+0x6c>
     9a4:	88 23       	and	r24, r24
     9a6:	11 f0       	breq	.+4      	; 0x9ac <__floatsisf+0x48>
     9a8:	96 e9       	ldi	r25, 0x96	; 150
     9aa:	11 c0       	rjmp	.+34     	; 0x9ce <__floatsisf+0x6a>
     9ac:	77 23       	and	r23, r23
     9ae:	21 f0       	breq	.+8      	; 0x9b8 <__floatsisf+0x54>
     9b0:	9e e8       	ldi	r25, 0x8E	; 142
     9b2:	87 2f       	mov	r24, r23
     9b4:	76 2f       	mov	r23, r22
     9b6:	05 c0       	rjmp	.+10     	; 0x9c2 <__floatsisf+0x5e>
     9b8:	66 23       	and	r22, r22
     9ba:	71 f0       	breq	.+28     	; 0x9d8 <__floatsisf+0x74>
     9bc:	96 e8       	ldi	r25, 0x86	; 134
     9be:	86 2f       	mov	r24, r22
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	60 e0       	ldi	r22, 0x00	; 0
     9c4:	2a f0       	brmi	.+10     	; 0x9d0 <__floatsisf+0x6c>
     9c6:	9a 95       	dec	r25
     9c8:	66 0f       	add	r22, r22
     9ca:	77 1f       	adc	r23, r23
     9cc:	88 1f       	adc	r24, r24
     9ce:	da f7       	brpl	.-10     	; 0x9c6 <__floatsisf+0x62>
     9d0:	88 0f       	add	r24, r24
     9d2:	96 95       	lsr	r25
     9d4:	87 95       	ror	r24
     9d6:	97 f9       	bld	r25, 7
     9d8:	08 95       	ret

000009da <__fp_cmp>:
     9da:	99 0f       	add	r25, r25
     9dc:	00 08       	sbc	r0, r0
     9de:	55 0f       	add	r21, r21
     9e0:	aa 0b       	sbc	r26, r26
     9e2:	e0 e8       	ldi	r30, 0x80	; 128
     9e4:	fe ef       	ldi	r31, 0xFE	; 254
     9e6:	16 16       	cp	r1, r22
     9e8:	17 06       	cpc	r1, r23
     9ea:	e8 07       	cpc	r30, r24
     9ec:	f9 07       	cpc	r31, r25
     9ee:	c0 f0       	brcs	.+48     	; 0xa20 <__fp_cmp+0x46>
     9f0:	12 16       	cp	r1, r18
     9f2:	13 06       	cpc	r1, r19
     9f4:	e4 07       	cpc	r30, r20
     9f6:	f5 07       	cpc	r31, r21
     9f8:	98 f0       	brcs	.+38     	; 0xa20 <__fp_cmp+0x46>
     9fa:	62 1b       	sub	r22, r18
     9fc:	73 0b       	sbc	r23, r19
     9fe:	84 0b       	sbc	r24, r20
     a00:	95 0b       	sbc	r25, r21
     a02:	39 f4       	brne	.+14     	; 0xa12 <__fp_cmp+0x38>
     a04:	0a 26       	eor	r0, r26
     a06:	61 f0       	breq	.+24     	; 0xa20 <__fp_cmp+0x46>
     a08:	23 2b       	or	r18, r19
     a0a:	24 2b       	or	r18, r20
     a0c:	25 2b       	or	r18, r21
     a0e:	21 f4       	brne	.+8      	; 0xa18 <__fp_cmp+0x3e>
     a10:	08 95       	ret
     a12:	0a 26       	eor	r0, r26
     a14:	09 f4       	brne	.+2      	; 0xa18 <__fp_cmp+0x3e>
     a16:	a1 40       	sbci	r26, 0x01	; 1
     a18:	a6 95       	lsr	r26
     a1a:	8f ef       	ldi	r24, 0xFF	; 255
     a1c:	81 1d       	adc	r24, r1
     a1e:	81 1d       	adc	r24, r1
     a20:	08 95       	ret

00000a22 <__fp_inf>:
     a22:	97 f9       	bld	r25, 7
     a24:	9f 67       	ori	r25, 0x7F	; 127
     a26:	80 e8       	ldi	r24, 0x80	; 128
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	60 e0       	ldi	r22, 0x00	; 0
     a2c:	08 95       	ret

00000a2e <__fp_nan>:
     a2e:	9f ef       	ldi	r25, 0xFF	; 255
     a30:	80 ec       	ldi	r24, 0xC0	; 192
     a32:	08 95       	ret

00000a34 <__fp_pscA>:
     a34:	00 24       	eor	r0, r0
     a36:	0a 94       	dec	r0
     a38:	16 16       	cp	r1, r22
     a3a:	17 06       	cpc	r1, r23
     a3c:	18 06       	cpc	r1, r24
     a3e:	09 06       	cpc	r0, r25
     a40:	08 95       	ret

00000a42 <__fp_pscB>:
     a42:	00 24       	eor	r0, r0
     a44:	0a 94       	dec	r0
     a46:	12 16       	cp	r1, r18
     a48:	13 06       	cpc	r1, r19
     a4a:	14 06       	cpc	r1, r20
     a4c:	05 06       	cpc	r0, r21
     a4e:	08 95       	ret

00000a50 <__fp_round>:
     a50:	09 2e       	mov	r0, r25
     a52:	03 94       	inc	r0
     a54:	00 0c       	add	r0, r0
     a56:	11 f4       	brne	.+4      	; 0xa5c <__fp_round+0xc>
     a58:	88 23       	and	r24, r24
     a5a:	52 f0       	brmi	.+20     	; 0xa70 <__fp_round+0x20>
     a5c:	bb 0f       	add	r27, r27
     a5e:	40 f4       	brcc	.+16     	; 0xa70 <__fp_round+0x20>
     a60:	bf 2b       	or	r27, r31
     a62:	11 f4       	brne	.+4      	; 0xa68 <__fp_round+0x18>
     a64:	60 ff       	sbrs	r22, 0
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__fp_round+0x20>
     a68:	6f 5f       	subi	r22, 0xFF	; 255
     a6a:	7f 4f       	sbci	r23, 0xFF	; 255
     a6c:	8f 4f       	sbci	r24, 0xFF	; 255
     a6e:	9f 4f       	sbci	r25, 0xFF	; 255
     a70:	08 95       	ret

00000a72 <__fp_split3>:
     a72:	57 fd       	sbrc	r21, 7
     a74:	90 58       	subi	r25, 0x80	; 128
     a76:	44 0f       	add	r20, r20
     a78:	55 1f       	adc	r21, r21
     a7a:	59 f0       	breq	.+22     	; 0xa92 <__fp_splitA+0x10>
     a7c:	5f 3f       	cpi	r21, 0xFF	; 255
     a7e:	71 f0       	breq	.+28     	; 0xa9c <__fp_splitA+0x1a>
     a80:	47 95       	ror	r20

00000a82 <__fp_splitA>:
     a82:	88 0f       	add	r24, r24
     a84:	97 fb       	bst	r25, 7
     a86:	99 1f       	adc	r25, r25
     a88:	61 f0       	breq	.+24     	; 0xaa2 <__fp_splitA+0x20>
     a8a:	9f 3f       	cpi	r25, 0xFF	; 255
     a8c:	79 f0       	breq	.+30     	; 0xaac <__fp_splitA+0x2a>
     a8e:	87 95       	ror	r24
     a90:	08 95       	ret
     a92:	12 16       	cp	r1, r18
     a94:	13 06       	cpc	r1, r19
     a96:	14 06       	cpc	r1, r20
     a98:	55 1f       	adc	r21, r21
     a9a:	f2 cf       	rjmp	.-28     	; 0xa80 <__fp_split3+0xe>
     a9c:	46 95       	lsr	r20
     a9e:	f1 df       	rcall	.-30     	; 0xa82 <__fp_splitA>
     aa0:	08 c0       	rjmp	.+16     	; 0xab2 <__fp_splitA+0x30>
     aa2:	16 16       	cp	r1, r22
     aa4:	17 06       	cpc	r1, r23
     aa6:	18 06       	cpc	r1, r24
     aa8:	99 1f       	adc	r25, r25
     aaa:	f1 cf       	rjmp	.-30     	; 0xa8e <__fp_splitA+0xc>
     aac:	86 95       	lsr	r24
     aae:	71 05       	cpc	r23, r1
     ab0:	61 05       	cpc	r22, r1
     ab2:	08 94       	sec
     ab4:	08 95       	ret

00000ab6 <__fp_zero>:
     ab6:	e8 94       	clt

00000ab8 <__fp_szero>:
     ab8:	bb 27       	eor	r27, r27
     aba:	66 27       	eor	r22, r22
     abc:	77 27       	eor	r23, r23
     abe:	cb 01       	movw	r24, r22
     ac0:	97 f9       	bld	r25, 7
     ac2:	08 95       	ret

00000ac4 <__mulsf3>:
     ac4:	0e 94 75 05 	call	0xaea	; 0xaea <__mulsf3x>
     ac8:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_round>
     acc:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_pscA>
     ad0:	38 f0       	brcs	.+14     	; 0xae0 <__mulsf3+0x1c>
     ad2:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_pscB>
     ad6:	20 f0       	brcs	.+8      	; 0xae0 <__mulsf3+0x1c>
     ad8:	95 23       	and	r25, r21
     ada:	11 f0       	breq	.+4      	; 0xae0 <__mulsf3+0x1c>
     adc:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     ae0:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>
     ae4:	11 24       	eor	r1, r1
     ae6:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>

00000aea <__mulsf3x>:
     aea:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_split3>
     aee:	70 f3       	brcs	.-36     	; 0xacc <__mulsf3+0x8>

00000af0 <__mulsf3_pse>:
     af0:	95 9f       	mul	r25, r21
     af2:	c1 f3       	breq	.-16     	; 0xae4 <__mulsf3+0x20>
     af4:	95 0f       	add	r25, r21
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	55 1f       	adc	r21, r21
     afa:	62 9f       	mul	r22, r18
     afc:	f0 01       	movw	r30, r0
     afe:	72 9f       	mul	r23, r18
     b00:	bb 27       	eor	r27, r27
     b02:	f0 0d       	add	r31, r0
     b04:	b1 1d       	adc	r27, r1
     b06:	63 9f       	mul	r22, r19
     b08:	aa 27       	eor	r26, r26
     b0a:	f0 0d       	add	r31, r0
     b0c:	b1 1d       	adc	r27, r1
     b0e:	aa 1f       	adc	r26, r26
     b10:	64 9f       	mul	r22, r20
     b12:	66 27       	eor	r22, r22
     b14:	b0 0d       	add	r27, r0
     b16:	a1 1d       	adc	r26, r1
     b18:	66 1f       	adc	r22, r22
     b1a:	82 9f       	mul	r24, r18
     b1c:	22 27       	eor	r18, r18
     b1e:	b0 0d       	add	r27, r0
     b20:	a1 1d       	adc	r26, r1
     b22:	62 1f       	adc	r22, r18
     b24:	73 9f       	mul	r23, r19
     b26:	b0 0d       	add	r27, r0
     b28:	a1 1d       	adc	r26, r1
     b2a:	62 1f       	adc	r22, r18
     b2c:	83 9f       	mul	r24, r19
     b2e:	a0 0d       	add	r26, r0
     b30:	61 1d       	adc	r22, r1
     b32:	22 1f       	adc	r18, r18
     b34:	74 9f       	mul	r23, r20
     b36:	33 27       	eor	r19, r19
     b38:	a0 0d       	add	r26, r0
     b3a:	61 1d       	adc	r22, r1
     b3c:	23 1f       	adc	r18, r19
     b3e:	84 9f       	mul	r24, r20
     b40:	60 0d       	add	r22, r0
     b42:	21 1d       	adc	r18, r1
     b44:	82 2f       	mov	r24, r18
     b46:	76 2f       	mov	r23, r22
     b48:	6a 2f       	mov	r22, r26
     b4a:	11 24       	eor	r1, r1
     b4c:	9f 57       	subi	r25, 0x7F	; 127
     b4e:	50 40       	sbci	r21, 0x00	; 0
     b50:	9a f0       	brmi	.+38     	; 0xb78 <__mulsf3_pse+0x88>
     b52:	f1 f0       	breq	.+60     	; 0xb90 <__mulsf3_pse+0xa0>
     b54:	88 23       	and	r24, r24
     b56:	4a f0       	brmi	.+18     	; 0xb6a <__mulsf3_pse+0x7a>
     b58:	ee 0f       	add	r30, r30
     b5a:	ff 1f       	adc	r31, r31
     b5c:	bb 1f       	adc	r27, r27
     b5e:	66 1f       	adc	r22, r22
     b60:	77 1f       	adc	r23, r23
     b62:	88 1f       	adc	r24, r24
     b64:	91 50       	subi	r25, 0x01	; 1
     b66:	50 40       	sbci	r21, 0x00	; 0
     b68:	a9 f7       	brne	.-22     	; 0xb54 <__mulsf3_pse+0x64>
     b6a:	9e 3f       	cpi	r25, 0xFE	; 254
     b6c:	51 05       	cpc	r21, r1
     b6e:	80 f0       	brcs	.+32     	; 0xb90 <__mulsf3_pse+0xa0>
     b70:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     b74:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     b78:	5f 3f       	cpi	r21, 0xFF	; 255
     b7a:	e4 f3       	brlt	.-8      	; 0xb74 <__mulsf3_pse+0x84>
     b7c:	98 3e       	cpi	r25, 0xE8	; 232
     b7e:	d4 f3       	brlt	.-12     	; 0xb74 <__mulsf3_pse+0x84>
     b80:	86 95       	lsr	r24
     b82:	77 95       	ror	r23
     b84:	67 95       	ror	r22
     b86:	b7 95       	ror	r27
     b88:	f7 95       	ror	r31
     b8a:	e7 95       	ror	r30
     b8c:	9f 5f       	subi	r25, 0xFF	; 255
     b8e:	c1 f7       	brne	.-16     	; 0xb80 <__mulsf3_pse+0x90>
     b90:	fe 2b       	or	r31, r30
     b92:	88 0f       	add	r24, r24
     b94:	91 1d       	adc	r25, r1
     b96:	96 95       	lsr	r25
     b98:	87 95       	ror	r24
     b9a:	97 f9       	bld	r25, 7
     b9c:	08 95       	ret

00000b9e <atof>:
     b9e:	66 27       	eor	r22, r22
     ba0:	77 27       	eor	r23, r23
     ba2:	0c 94 fc 07 	jmp	0xff8	; 0xff8 <strtod>

00000ba6 <atoi>:
     ba6:	fc 01       	movw	r30, r24
     ba8:	88 27       	eor	r24, r24
     baa:	99 27       	eor	r25, r25
     bac:	e8 94       	clt
     bae:	21 91       	ld	r18, Z+
     bb0:	20 32       	cpi	r18, 0x20	; 32
     bb2:	e9 f3       	breq	.-6      	; 0xbae <atoi+0x8>
     bb4:	29 30       	cpi	r18, 0x09	; 9
     bb6:	10 f0       	brcs	.+4      	; 0xbbc <atoi+0x16>
     bb8:	2e 30       	cpi	r18, 0x0E	; 14
     bba:	c8 f3       	brcs	.-14     	; 0xbae <atoi+0x8>
     bbc:	2b 32       	cpi	r18, 0x2B	; 43
     bbe:	41 f0       	breq	.+16     	; 0xbd0 <atoi+0x2a>
     bc0:	2d 32       	cpi	r18, 0x2D	; 45
     bc2:	39 f4       	brne	.+14     	; 0xbd2 <atoi+0x2c>
     bc4:	68 94       	set
     bc6:	04 c0       	rjmp	.+8      	; 0xbd0 <atoi+0x2a>
     bc8:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__mulhi_const_10>
     bcc:	82 0f       	add	r24, r18
     bce:	91 1d       	adc	r25, r1
     bd0:	21 91       	ld	r18, Z+
     bd2:	20 53       	subi	r18, 0x30	; 48
     bd4:	2a 30       	cpi	r18, 0x0A	; 10
     bd6:	c0 f3       	brcs	.-16     	; 0xbc8 <atoi+0x22>
     bd8:	1e f4       	brtc	.+6      	; 0xbe0 <atoi+0x3a>
     bda:	90 95       	com	r25
     bdc:	81 95       	neg	r24
     bde:	9f 4f       	sbci	r25, 0xFF	; 255
     be0:	08 95       	ret

00000be2 <__mulhi_const_10>:
     be2:	7a e0       	ldi	r23, 0x0A	; 10
     be4:	97 9f       	mul	r25, r23
     be6:	90 2d       	mov	r25, r0
     be8:	87 9f       	mul	r24, r23
     bea:	80 2d       	mov	r24, r0
     bec:	91 0d       	add	r25, r1
     bee:	11 24       	eor	r1, r1
     bf0:	08 95       	ret

00000bf2 <sprintf>:
     bf2:	ae e0       	ldi	r26, 0x0E	; 14
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
     bf6:	ef ef       	ldi	r30, 0xFF	; 255
     bf8:	f5 e0       	ldi	r31, 0x05	; 5
     bfa:	0c 94 37 0a 	jmp	0x146e	; 0x146e <__prologue_saves__+0x1c>
     bfe:	0d 89       	ldd	r16, Y+21	; 0x15
     c00:	1e 89       	ldd	r17, Y+22	; 0x16
     c02:	86 e0       	ldi	r24, 0x06	; 6
     c04:	8c 83       	std	Y+4, r24	; 0x04
     c06:	1a 83       	std	Y+2, r17	; 0x02
     c08:	09 83       	std	Y+1, r16	; 0x01
     c0a:	8f ef       	ldi	r24, 0xFF	; 255
     c0c:	9f e7       	ldi	r25, 0x7F	; 127
     c0e:	9e 83       	std	Y+6, r25	; 0x06
     c10:	8d 83       	std	Y+5, r24	; 0x05
     c12:	ae 01       	movw	r20, r28
     c14:	47 5e       	subi	r20, 0xE7	; 231
     c16:	5f 4f       	sbci	r21, 0xFF	; 255
     c18:	6f 89       	ldd	r22, Y+23	; 0x17
     c1a:	78 8d       	ldd	r23, Y+24	; 0x18
     c1c:	ce 01       	movw	r24, r28
     c1e:	01 96       	adiw	r24, 0x01	; 1
     c20:	0e 94 1b 06 	call	0xc36	; 0xc36 <vfprintf>
     c24:	ef 81       	ldd	r30, Y+7	; 0x07
     c26:	f8 85       	ldd	r31, Y+8	; 0x08
     c28:	e0 0f       	add	r30, r16
     c2a:	f1 1f       	adc	r31, r17
     c2c:	10 82       	st	Z, r1
     c2e:	2e 96       	adiw	r28, 0x0e	; 14
     c30:	e4 e0       	ldi	r30, 0x04	; 4
     c32:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <__epilogue_restores__+0x1c>

00000c36 <vfprintf>:
     c36:	ab e0       	ldi	r26, 0x0B	; 11
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e1 e2       	ldi	r30, 0x21	; 33
     c3c:	f6 e0       	ldi	r31, 0x06	; 6
     c3e:	0c 94 29 0a 	jmp	0x1452	; 0x1452 <__prologue_saves__>
     c42:	6c 01       	movw	r12, r24
     c44:	7b 01       	movw	r14, r22
     c46:	8a 01       	movw	r16, r20
     c48:	fc 01       	movw	r30, r24
     c4a:	17 82       	std	Z+7, r1	; 0x07
     c4c:	16 82       	std	Z+6, r1	; 0x06
     c4e:	83 81       	ldd	r24, Z+3	; 0x03
     c50:	81 ff       	sbrs	r24, 1
     c52:	cc c1       	rjmp	.+920    	; 0xfec <vfprintf+0x3b6>
     c54:	ce 01       	movw	r24, r28
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	3c 01       	movw	r6, r24
     c5a:	f6 01       	movw	r30, r12
     c5c:	93 81       	ldd	r25, Z+3	; 0x03
     c5e:	f7 01       	movw	r30, r14
     c60:	93 fd       	sbrc	r25, 3
     c62:	85 91       	lpm	r24, Z+
     c64:	93 ff       	sbrs	r25, 3
     c66:	81 91       	ld	r24, Z+
     c68:	7f 01       	movw	r14, r30
     c6a:	88 23       	and	r24, r24
     c6c:	09 f4       	brne	.+2      	; 0xc70 <vfprintf+0x3a>
     c6e:	ba c1       	rjmp	.+884    	; 0xfe4 <vfprintf+0x3ae>
     c70:	85 32       	cpi	r24, 0x25	; 37
     c72:	39 f4       	brne	.+14     	; 0xc82 <vfprintf+0x4c>
     c74:	93 fd       	sbrc	r25, 3
     c76:	85 91       	lpm	r24, Z+
     c78:	93 ff       	sbrs	r25, 3
     c7a:	81 91       	ld	r24, Z+
     c7c:	7f 01       	movw	r14, r30
     c7e:	85 32       	cpi	r24, 0x25	; 37
     c80:	29 f4       	brne	.+10     	; 0xc8c <vfprintf+0x56>
     c82:	b6 01       	movw	r22, r12
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     c8a:	e7 cf       	rjmp	.-50     	; 0xc5a <vfprintf+0x24>
     c8c:	91 2c       	mov	r9, r1
     c8e:	21 2c       	mov	r2, r1
     c90:	31 2c       	mov	r3, r1
     c92:	ff e1       	ldi	r31, 0x1F	; 31
     c94:	f3 15       	cp	r31, r3
     c96:	d8 f0       	brcs	.+54     	; 0xcce <vfprintf+0x98>
     c98:	8b 32       	cpi	r24, 0x2B	; 43
     c9a:	79 f0       	breq	.+30     	; 0xcba <vfprintf+0x84>
     c9c:	38 f4       	brcc	.+14     	; 0xcac <vfprintf+0x76>
     c9e:	80 32       	cpi	r24, 0x20	; 32
     ca0:	79 f0       	breq	.+30     	; 0xcc0 <vfprintf+0x8a>
     ca2:	83 32       	cpi	r24, 0x23	; 35
     ca4:	a1 f4       	brne	.+40     	; 0xcce <vfprintf+0x98>
     ca6:	23 2d       	mov	r18, r3
     ca8:	20 61       	ori	r18, 0x10	; 16
     caa:	1d c0       	rjmp	.+58     	; 0xce6 <vfprintf+0xb0>
     cac:	8d 32       	cpi	r24, 0x2D	; 45
     cae:	61 f0       	breq	.+24     	; 0xcc8 <vfprintf+0x92>
     cb0:	80 33       	cpi	r24, 0x30	; 48
     cb2:	69 f4       	brne	.+26     	; 0xcce <vfprintf+0x98>
     cb4:	23 2d       	mov	r18, r3
     cb6:	21 60       	ori	r18, 0x01	; 1
     cb8:	16 c0       	rjmp	.+44     	; 0xce6 <vfprintf+0xb0>
     cba:	83 2d       	mov	r24, r3
     cbc:	82 60       	ori	r24, 0x02	; 2
     cbe:	38 2e       	mov	r3, r24
     cc0:	e3 2d       	mov	r30, r3
     cc2:	e4 60       	ori	r30, 0x04	; 4
     cc4:	3e 2e       	mov	r3, r30
     cc6:	2a c0       	rjmp	.+84     	; 0xd1c <vfprintf+0xe6>
     cc8:	f3 2d       	mov	r31, r3
     cca:	f8 60       	ori	r31, 0x08	; 8
     ccc:	1d c0       	rjmp	.+58     	; 0xd08 <vfprintf+0xd2>
     cce:	37 fc       	sbrc	r3, 7
     cd0:	2d c0       	rjmp	.+90     	; 0xd2c <vfprintf+0xf6>
     cd2:	20 ed       	ldi	r18, 0xD0	; 208
     cd4:	28 0f       	add	r18, r24
     cd6:	2a 30       	cpi	r18, 0x0A	; 10
     cd8:	40 f0       	brcs	.+16     	; 0xcea <vfprintf+0xb4>
     cda:	8e 32       	cpi	r24, 0x2E	; 46
     cdc:	b9 f4       	brne	.+46     	; 0xd0c <vfprintf+0xd6>
     cde:	36 fc       	sbrc	r3, 6
     ce0:	81 c1       	rjmp	.+770    	; 0xfe4 <vfprintf+0x3ae>
     ce2:	23 2d       	mov	r18, r3
     ce4:	20 64       	ori	r18, 0x40	; 64
     ce6:	32 2e       	mov	r3, r18
     ce8:	19 c0       	rjmp	.+50     	; 0xd1c <vfprintf+0xe6>
     cea:	36 fe       	sbrs	r3, 6
     cec:	06 c0       	rjmp	.+12     	; 0xcfa <vfprintf+0xc4>
     cee:	8a e0       	ldi	r24, 0x0A	; 10
     cf0:	98 9e       	mul	r9, r24
     cf2:	20 0d       	add	r18, r0
     cf4:	11 24       	eor	r1, r1
     cf6:	92 2e       	mov	r9, r18
     cf8:	11 c0       	rjmp	.+34     	; 0xd1c <vfprintf+0xe6>
     cfa:	ea e0       	ldi	r30, 0x0A	; 10
     cfc:	2e 9e       	mul	r2, r30
     cfe:	20 0d       	add	r18, r0
     d00:	11 24       	eor	r1, r1
     d02:	22 2e       	mov	r2, r18
     d04:	f3 2d       	mov	r31, r3
     d06:	f0 62       	ori	r31, 0x20	; 32
     d08:	3f 2e       	mov	r3, r31
     d0a:	08 c0       	rjmp	.+16     	; 0xd1c <vfprintf+0xe6>
     d0c:	8c 36       	cpi	r24, 0x6C	; 108
     d0e:	21 f4       	brne	.+8      	; 0xd18 <vfprintf+0xe2>
     d10:	83 2d       	mov	r24, r3
     d12:	80 68       	ori	r24, 0x80	; 128
     d14:	38 2e       	mov	r3, r24
     d16:	02 c0       	rjmp	.+4      	; 0xd1c <vfprintf+0xe6>
     d18:	88 36       	cpi	r24, 0x68	; 104
     d1a:	41 f4       	brne	.+16     	; 0xd2c <vfprintf+0xf6>
     d1c:	f7 01       	movw	r30, r14
     d1e:	93 fd       	sbrc	r25, 3
     d20:	85 91       	lpm	r24, Z+
     d22:	93 ff       	sbrs	r25, 3
     d24:	81 91       	ld	r24, Z+
     d26:	7f 01       	movw	r14, r30
     d28:	81 11       	cpse	r24, r1
     d2a:	b3 cf       	rjmp	.-154    	; 0xc92 <vfprintf+0x5c>
     d2c:	98 2f       	mov	r25, r24
     d2e:	9f 7d       	andi	r25, 0xDF	; 223
     d30:	95 54       	subi	r25, 0x45	; 69
     d32:	93 30       	cpi	r25, 0x03	; 3
     d34:	28 f4       	brcc	.+10     	; 0xd40 <vfprintf+0x10a>
     d36:	0c 5f       	subi	r16, 0xFC	; 252
     d38:	1f 4f       	sbci	r17, 0xFF	; 255
     d3a:	9f e3       	ldi	r25, 0x3F	; 63
     d3c:	99 83       	std	Y+1, r25	; 0x01
     d3e:	0d c0       	rjmp	.+26     	; 0xd5a <vfprintf+0x124>
     d40:	83 36       	cpi	r24, 0x63	; 99
     d42:	31 f0       	breq	.+12     	; 0xd50 <vfprintf+0x11a>
     d44:	83 37       	cpi	r24, 0x73	; 115
     d46:	71 f0       	breq	.+28     	; 0xd64 <vfprintf+0x12e>
     d48:	83 35       	cpi	r24, 0x53	; 83
     d4a:	09 f0       	breq	.+2      	; 0xd4e <vfprintf+0x118>
     d4c:	59 c0       	rjmp	.+178    	; 0xe00 <vfprintf+0x1ca>
     d4e:	21 c0       	rjmp	.+66     	; 0xd92 <vfprintf+0x15c>
     d50:	f8 01       	movw	r30, r16
     d52:	80 81       	ld	r24, Z
     d54:	89 83       	std	Y+1, r24	; 0x01
     d56:	0e 5f       	subi	r16, 0xFE	; 254
     d58:	1f 4f       	sbci	r17, 0xFF	; 255
     d5a:	88 24       	eor	r8, r8
     d5c:	83 94       	inc	r8
     d5e:	91 2c       	mov	r9, r1
     d60:	53 01       	movw	r10, r6
     d62:	13 c0       	rjmp	.+38     	; 0xd8a <vfprintf+0x154>
     d64:	28 01       	movw	r4, r16
     d66:	f2 e0       	ldi	r31, 0x02	; 2
     d68:	4f 0e       	add	r4, r31
     d6a:	51 1c       	adc	r5, r1
     d6c:	f8 01       	movw	r30, r16
     d6e:	a0 80       	ld	r10, Z
     d70:	b1 80       	ldd	r11, Z+1	; 0x01
     d72:	36 fe       	sbrs	r3, 6
     d74:	03 c0       	rjmp	.+6      	; 0xd7c <vfprintf+0x146>
     d76:	69 2d       	mov	r22, r9
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	02 c0       	rjmp	.+4      	; 0xd80 <vfprintf+0x14a>
     d7c:	6f ef       	ldi	r22, 0xFF	; 255
     d7e:	7f ef       	ldi	r23, 0xFF	; 255
     d80:	c5 01       	movw	r24, r10
     d82:	0e 94 76 09 	call	0x12ec	; 0x12ec <strnlen>
     d86:	4c 01       	movw	r8, r24
     d88:	82 01       	movw	r16, r4
     d8a:	f3 2d       	mov	r31, r3
     d8c:	ff 77       	andi	r31, 0x7F	; 127
     d8e:	3f 2e       	mov	r3, r31
     d90:	16 c0       	rjmp	.+44     	; 0xdbe <vfprintf+0x188>
     d92:	28 01       	movw	r4, r16
     d94:	22 e0       	ldi	r18, 0x02	; 2
     d96:	42 0e       	add	r4, r18
     d98:	51 1c       	adc	r5, r1
     d9a:	f8 01       	movw	r30, r16
     d9c:	a0 80       	ld	r10, Z
     d9e:	b1 80       	ldd	r11, Z+1	; 0x01
     da0:	36 fe       	sbrs	r3, 6
     da2:	03 c0       	rjmp	.+6      	; 0xdaa <vfprintf+0x174>
     da4:	69 2d       	mov	r22, r9
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	02 c0       	rjmp	.+4      	; 0xdae <vfprintf+0x178>
     daa:	6f ef       	ldi	r22, 0xFF	; 255
     dac:	7f ef       	ldi	r23, 0xFF	; 255
     dae:	c5 01       	movw	r24, r10
     db0:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <strnlen_P>
     db4:	4c 01       	movw	r8, r24
     db6:	f3 2d       	mov	r31, r3
     db8:	f0 68       	ori	r31, 0x80	; 128
     dba:	3f 2e       	mov	r3, r31
     dbc:	82 01       	movw	r16, r4
     dbe:	33 fc       	sbrc	r3, 3
     dc0:	1b c0       	rjmp	.+54     	; 0xdf8 <vfprintf+0x1c2>
     dc2:	82 2d       	mov	r24, r2
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	88 16       	cp	r8, r24
     dc8:	99 06       	cpc	r9, r25
     dca:	b0 f4       	brcc	.+44     	; 0xdf8 <vfprintf+0x1c2>
     dcc:	b6 01       	movw	r22, r12
     dce:	80 e2       	ldi	r24, 0x20	; 32
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     dd6:	2a 94       	dec	r2
     dd8:	f4 cf       	rjmp	.-24     	; 0xdc2 <vfprintf+0x18c>
     dda:	f5 01       	movw	r30, r10
     ddc:	37 fc       	sbrc	r3, 7
     dde:	85 91       	lpm	r24, Z+
     de0:	37 fe       	sbrs	r3, 7
     de2:	81 91       	ld	r24, Z+
     de4:	5f 01       	movw	r10, r30
     de6:	b6 01       	movw	r22, r12
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     dee:	21 10       	cpse	r2, r1
     df0:	2a 94       	dec	r2
     df2:	21 e0       	ldi	r18, 0x01	; 1
     df4:	82 1a       	sub	r8, r18
     df6:	91 08       	sbc	r9, r1
     df8:	81 14       	cp	r8, r1
     dfa:	91 04       	cpc	r9, r1
     dfc:	71 f7       	brne	.-36     	; 0xdda <vfprintf+0x1a4>
     dfe:	e8 c0       	rjmp	.+464    	; 0xfd0 <vfprintf+0x39a>
     e00:	84 36       	cpi	r24, 0x64	; 100
     e02:	11 f0       	breq	.+4      	; 0xe08 <vfprintf+0x1d2>
     e04:	89 36       	cpi	r24, 0x69	; 105
     e06:	41 f5       	brne	.+80     	; 0xe58 <vfprintf+0x222>
     e08:	f8 01       	movw	r30, r16
     e0a:	37 fe       	sbrs	r3, 7
     e0c:	07 c0       	rjmp	.+14     	; 0xe1c <vfprintf+0x1e6>
     e0e:	60 81       	ld	r22, Z
     e10:	71 81       	ldd	r23, Z+1	; 0x01
     e12:	82 81       	ldd	r24, Z+2	; 0x02
     e14:	93 81       	ldd	r25, Z+3	; 0x03
     e16:	0c 5f       	subi	r16, 0xFC	; 252
     e18:	1f 4f       	sbci	r17, 0xFF	; 255
     e1a:	08 c0       	rjmp	.+16     	; 0xe2c <vfprintf+0x1f6>
     e1c:	60 81       	ld	r22, Z
     e1e:	71 81       	ldd	r23, Z+1	; 0x01
     e20:	07 2e       	mov	r0, r23
     e22:	00 0c       	add	r0, r0
     e24:	88 0b       	sbc	r24, r24
     e26:	99 0b       	sbc	r25, r25
     e28:	0e 5f       	subi	r16, 0xFE	; 254
     e2a:	1f 4f       	sbci	r17, 0xFF	; 255
     e2c:	f3 2d       	mov	r31, r3
     e2e:	ff 76       	andi	r31, 0x6F	; 111
     e30:	3f 2e       	mov	r3, r31
     e32:	97 ff       	sbrs	r25, 7
     e34:	09 c0       	rjmp	.+18     	; 0xe48 <vfprintf+0x212>
     e36:	90 95       	com	r25
     e38:	80 95       	com	r24
     e3a:	70 95       	com	r23
     e3c:	61 95       	neg	r22
     e3e:	7f 4f       	sbci	r23, 0xFF	; 255
     e40:	8f 4f       	sbci	r24, 0xFF	; 255
     e42:	9f 4f       	sbci	r25, 0xFF	; 255
     e44:	f0 68       	ori	r31, 0x80	; 128
     e46:	3f 2e       	mov	r3, r31
     e48:	2a e0       	ldi	r18, 0x0A	; 10
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	a3 01       	movw	r20, r6
     e4e:	0e 94 bd 09 	call	0x137a	; 0x137a <__ultoa_invert>
     e52:	88 2e       	mov	r8, r24
     e54:	86 18       	sub	r8, r6
     e56:	45 c0       	rjmp	.+138    	; 0xee2 <vfprintf+0x2ac>
     e58:	85 37       	cpi	r24, 0x75	; 117
     e5a:	31 f4       	brne	.+12     	; 0xe68 <vfprintf+0x232>
     e5c:	23 2d       	mov	r18, r3
     e5e:	2f 7e       	andi	r18, 0xEF	; 239
     e60:	b2 2e       	mov	r11, r18
     e62:	2a e0       	ldi	r18, 0x0A	; 10
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	25 c0       	rjmp	.+74     	; 0xeb2 <vfprintf+0x27c>
     e68:	93 2d       	mov	r25, r3
     e6a:	99 7f       	andi	r25, 0xF9	; 249
     e6c:	b9 2e       	mov	r11, r25
     e6e:	8f 36       	cpi	r24, 0x6F	; 111
     e70:	c1 f0       	breq	.+48     	; 0xea2 <vfprintf+0x26c>
     e72:	18 f4       	brcc	.+6      	; 0xe7a <vfprintf+0x244>
     e74:	88 35       	cpi	r24, 0x58	; 88
     e76:	79 f0       	breq	.+30     	; 0xe96 <vfprintf+0x260>
     e78:	b5 c0       	rjmp	.+362    	; 0xfe4 <vfprintf+0x3ae>
     e7a:	80 37       	cpi	r24, 0x70	; 112
     e7c:	19 f0       	breq	.+6      	; 0xe84 <vfprintf+0x24e>
     e7e:	88 37       	cpi	r24, 0x78	; 120
     e80:	21 f0       	breq	.+8      	; 0xe8a <vfprintf+0x254>
     e82:	b0 c0       	rjmp	.+352    	; 0xfe4 <vfprintf+0x3ae>
     e84:	e9 2f       	mov	r30, r25
     e86:	e0 61       	ori	r30, 0x10	; 16
     e88:	be 2e       	mov	r11, r30
     e8a:	b4 fe       	sbrs	r11, 4
     e8c:	0d c0       	rjmp	.+26     	; 0xea8 <vfprintf+0x272>
     e8e:	fb 2d       	mov	r31, r11
     e90:	f4 60       	ori	r31, 0x04	; 4
     e92:	bf 2e       	mov	r11, r31
     e94:	09 c0       	rjmp	.+18     	; 0xea8 <vfprintf+0x272>
     e96:	34 fe       	sbrs	r3, 4
     e98:	0a c0       	rjmp	.+20     	; 0xeae <vfprintf+0x278>
     e9a:	29 2f       	mov	r18, r25
     e9c:	26 60       	ori	r18, 0x06	; 6
     e9e:	b2 2e       	mov	r11, r18
     ea0:	06 c0       	rjmp	.+12     	; 0xeae <vfprintf+0x278>
     ea2:	28 e0       	ldi	r18, 0x08	; 8
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	05 c0       	rjmp	.+10     	; 0xeb2 <vfprintf+0x27c>
     ea8:	20 e1       	ldi	r18, 0x10	; 16
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	02 c0       	rjmp	.+4      	; 0xeb2 <vfprintf+0x27c>
     eae:	20 e1       	ldi	r18, 0x10	; 16
     eb0:	32 e0       	ldi	r19, 0x02	; 2
     eb2:	f8 01       	movw	r30, r16
     eb4:	b7 fe       	sbrs	r11, 7
     eb6:	07 c0       	rjmp	.+14     	; 0xec6 <vfprintf+0x290>
     eb8:	60 81       	ld	r22, Z
     eba:	71 81       	ldd	r23, Z+1	; 0x01
     ebc:	82 81       	ldd	r24, Z+2	; 0x02
     ebe:	93 81       	ldd	r25, Z+3	; 0x03
     ec0:	0c 5f       	subi	r16, 0xFC	; 252
     ec2:	1f 4f       	sbci	r17, 0xFF	; 255
     ec4:	06 c0       	rjmp	.+12     	; 0xed2 <vfprintf+0x29c>
     ec6:	60 81       	ld	r22, Z
     ec8:	71 81       	ldd	r23, Z+1	; 0x01
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	0e 5f       	subi	r16, 0xFE	; 254
     ed0:	1f 4f       	sbci	r17, 0xFF	; 255
     ed2:	a3 01       	movw	r20, r6
     ed4:	0e 94 bd 09 	call	0x137a	; 0x137a <__ultoa_invert>
     ed8:	88 2e       	mov	r8, r24
     eda:	86 18       	sub	r8, r6
     edc:	fb 2d       	mov	r31, r11
     ede:	ff 77       	andi	r31, 0x7F	; 127
     ee0:	3f 2e       	mov	r3, r31
     ee2:	36 fe       	sbrs	r3, 6
     ee4:	0d c0       	rjmp	.+26     	; 0xf00 <vfprintf+0x2ca>
     ee6:	23 2d       	mov	r18, r3
     ee8:	2e 7f       	andi	r18, 0xFE	; 254
     eea:	a2 2e       	mov	r10, r18
     eec:	89 14       	cp	r8, r9
     eee:	58 f4       	brcc	.+22     	; 0xf06 <vfprintf+0x2d0>
     ef0:	34 fe       	sbrs	r3, 4
     ef2:	0b c0       	rjmp	.+22     	; 0xf0a <vfprintf+0x2d4>
     ef4:	32 fc       	sbrc	r3, 2
     ef6:	09 c0       	rjmp	.+18     	; 0xf0a <vfprintf+0x2d4>
     ef8:	83 2d       	mov	r24, r3
     efa:	8e 7e       	andi	r24, 0xEE	; 238
     efc:	a8 2e       	mov	r10, r24
     efe:	05 c0       	rjmp	.+10     	; 0xf0a <vfprintf+0x2d4>
     f00:	b8 2c       	mov	r11, r8
     f02:	a3 2c       	mov	r10, r3
     f04:	03 c0       	rjmp	.+6      	; 0xf0c <vfprintf+0x2d6>
     f06:	b8 2c       	mov	r11, r8
     f08:	01 c0       	rjmp	.+2      	; 0xf0c <vfprintf+0x2d6>
     f0a:	b9 2c       	mov	r11, r9
     f0c:	a4 fe       	sbrs	r10, 4
     f0e:	0f c0       	rjmp	.+30     	; 0xf2e <vfprintf+0x2f8>
     f10:	fe 01       	movw	r30, r28
     f12:	e8 0d       	add	r30, r8
     f14:	f1 1d       	adc	r31, r1
     f16:	80 81       	ld	r24, Z
     f18:	80 33       	cpi	r24, 0x30	; 48
     f1a:	21 f4       	brne	.+8      	; 0xf24 <vfprintf+0x2ee>
     f1c:	9a 2d       	mov	r25, r10
     f1e:	99 7e       	andi	r25, 0xE9	; 233
     f20:	a9 2e       	mov	r10, r25
     f22:	09 c0       	rjmp	.+18     	; 0xf36 <vfprintf+0x300>
     f24:	a2 fe       	sbrs	r10, 2
     f26:	06 c0       	rjmp	.+12     	; 0xf34 <vfprintf+0x2fe>
     f28:	b3 94       	inc	r11
     f2a:	b3 94       	inc	r11
     f2c:	04 c0       	rjmp	.+8      	; 0xf36 <vfprintf+0x300>
     f2e:	8a 2d       	mov	r24, r10
     f30:	86 78       	andi	r24, 0x86	; 134
     f32:	09 f0       	breq	.+2      	; 0xf36 <vfprintf+0x300>
     f34:	b3 94       	inc	r11
     f36:	a3 fc       	sbrc	r10, 3
     f38:	11 c0       	rjmp	.+34     	; 0xf5c <vfprintf+0x326>
     f3a:	a0 fe       	sbrs	r10, 0
     f3c:	06 c0       	rjmp	.+12     	; 0xf4a <vfprintf+0x314>
     f3e:	b2 14       	cp	r11, r2
     f40:	88 f4       	brcc	.+34     	; 0xf64 <vfprintf+0x32e>
     f42:	28 0c       	add	r2, r8
     f44:	92 2c       	mov	r9, r2
     f46:	9b 18       	sub	r9, r11
     f48:	0e c0       	rjmp	.+28     	; 0xf66 <vfprintf+0x330>
     f4a:	b2 14       	cp	r11, r2
     f4c:	60 f4       	brcc	.+24     	; 0xf66 <vfprintf+0x330>
     f4e:	b6 01       	movw	r22, r12
     f50:	80 e2       	ldi	r24, 0x20	; 32
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     f58:	b3 94       	inc	r11
     f5a:	f7 cf       	rjmp	.-18     	; 0xf4a <vfprintf+0x314>
     f5c:	b2 14       	cp	r11, r2
     f5e:	18 f4       	brcc	.+6      	; 0xf66 <vfprintf+0x330>
     f60:	2b 18       	sub	r2, r11
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <vfprintf+0x332>
     f64:	98 2c       	mov	r9, r8
     f66:	21 2c       	mov	r2, r1
     f68:	a4 fe       	sbrs	r10, 4
     f6a:	10 c0       	rjmp	.+32     	; 0xf8c <vfprintf+0x356>
     f6c:	b6 01       	movw	r22, r12
     f6e:	80 e3       	ldi	r24, 0x30	; 48
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     f76:	a2 fe       	sbrs	r10, 2
     f78:	17 c0       	rjmp	.+46     	; 0xfa8 <vfprintf+0x372>
     f7a:	a1 fc       	sbrc	r10, 1
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <vfprintf+0x34e>
     f7e:	88 e7       	ldi	r24, 0x78	; 120
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <vfprintf+0x352>
     f84:	88 e5       	ldi	r24, 0x58	; 88
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	b6 01       	movw	r22, r12
     f8a:	0c c0       	rjmp	.+24     	; 0xfa4 <vfprintf+0x36e>
     f8c:	8a 2d       	mov	r24, r10
     f8e:	86 78       	andi	r24, 0x86	; 134
     f90:	59 f0       	breq	.+22     	; 0xfa8 <vfprintf+0x372>
     f92:	a1 fe       	sbrs	r10, 1
     f94:	02 c0       	rjmp	.+4      	; 0xf9a <vfprintf+0x364>
     f96:	8b e2       	ldi	r24, 0x2B	; 43
     f98:	01 c0       	rjmp	.+2      	; 0xf9c <vfprintf+0x366>
     f9a:	80 e2       	ldi	r24, 0x20	; 32
     f9c:	a7 fc       	sbrc	r10, 7
     f9e:	8d e2       	ldi	r24, 0x2D	; 45
     fa0:	b6 01       	movw	r22, r12
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     fa8:	89 14       	cp	r8, r9
     faa:	38 f4       	brcc	.+14     	; 0xfba <vfprintf+0x384>
     fac:	b6 01       	movw	r22, r12
     fae:	80 e3       	ldi	r24, 0x30	; 48
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     fb6:	9a 94       	dec	r9
     fb8:	f7 cf       	rjmp	.-18     	; 0xfa8 <vfprintf+0x372>
     fba:	8a 94       	dec	r8
     fbc:	f3 01       	movw	r30, r6
     fbe:	e8 0d       	add	r30, r8
     fc0:	f1 1d       	adc	r31, r1
     fc2:	80 81       	ld	r24, Z
     fc4:	b6 01       	movw	r22, r12
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     fcc:	81 10       	cpse	r8, r1
     fce:	f5 cf       	rjmp	.-22     	; 0xfba <vfprintf+0x384>
     fd0:	22 20       	and	r2, r2
     fd2:	09 f4       	brne	.+2      	; 0xfd6 <vfprintf+0x3a0>
     fd4:	42 ce       	rjmp	.-892    	; 0xc5a <vfprintf+0x24>
     fd6:	b6 01       	movw	r22, r12
     fd8:	80 e2       	ldi	r24, 0x20	; 32
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	0e 94 81 09 	call	0x1302	; 0x1302 <fputc>
     fe0:	2a 94       	dec	r2
     fe2:	f6 cf       	rjmp	.-20     	; 0xfd0 <vfprintf+0x39a>
     fe4:	f6 01       	movw	r30, r12
     fe6:	86 81       	ldd	r24, Z+6	; 0x06
     fe8:	97 81       	ldd	r25, Z+7	; 0x07
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <vfprintf+0x3ba>
     fec:	8f ef       	ldi	r24, 0xFF	; 255
     fee:	9f ef       	ldi	r25, 0xFF	; 255
     ff0:	2b 96       	adiw	r28, 0x0b	; 11
     ff2:	e2 e1       	ldi	r30, 0x12	; 18
     ff4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__epilogue_restores__>

00000ff8 <strtod>:
     ff8:	a0 e0       	ldi	r26, 0x00	; 0
     ffa:	b0 e0       	ldi	r27, 0x00	; 0
     ffc:	e2 e0       	ldi	r30, 0x02	; 2
     ffe:	f8 e0       	ldi	r31, 0x08	; 8
    1000:	0c 94 2f 0a 	jmp	0x145e	; 0x145e <__prologue_saves__+0xc>
    1004:	ec 01       	movw	r28, r24
    1006:	6b 01       	movw	r12, r22
    1008:	61 15       	cp	r22, r1
    100a:	71 05       	cpc	r23, r1
    100c:	19 f0       	breq	.+6      	; 0x1014 <strtod+0x1c>
    100e:	fb 01       	movw	r30, r22
    1010:	91 83       	std	Z+1, r25	; 0x01
    1012:	80 83       	st	Z, r24
    1014:	7e 01       	movw	r14, r28
    1016:	ff ef       	ldi	r31, 0xFF	; 255
    1018:	ef 1a       	sub	r14, r31
    101a:	ff 0a       	sbc	r15, r31
    101c:	08 81       	ld	r16, Y
    101e:	80 2f       	mov	r24, r16
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	0e 94 4a 09 	call	0x1294	; 0x1294 <isspace>
    1026:	89 2b       	or	r24, r25
    1028:	11 f0       	breq	.+4      	; 0x102e <strtod+0x36>
    102a:	e7 01       	movw	r28, r14
    102c:	f3 cf       	rjmp	.-26     	; 0x1014 <strtod+0x1c>
    102e:	0d 32       	cpi	r16, 0x2D	; 45
    1030:	39 f4       	brne	.+14     	; 0x1040 <strtod+0x48>
    1032:	7e 01       	movw	r14, r28
    1034:	82 e0       	ldi	r24, 0x02	; 2
    1036:	e8 0e       	add	r14, r24
    1038:	f1 1c       	adc	r15, r1
    103a:	09 81       	ldd	r16, Y+1	; 0x01
    103c:	11 e0       	ldi	r17, 0x01	; 1
    103e:	08 c0       	rjmp	.+16     	; 0x1050 <strtod+0x58>
    1040:	0b 32       	cpi	r16, 0x2B	; 43
    1042:	29 f4       	brne	.+10     	; 0x104e <strtod+0x56>
    1044:	7e 01       	movw	r14, r28
    1046:	92 e0       	ldi	r25, 0x02	; 2
    1048:	e9 0e       	add	r14, r25
    104a:	f1 1c       	adc	r15, r1
    104c:	09 81       	ldd	r16, Y+1	; 0x01
    104e:	10 e0       	ldi	r17, 0x00	; 0
    1050:	e7 01       	movw	r28, r14
    1052:	21 97       	sbiw	r28, 0x01	; 1
    1054:	43 e0       	ldi	r20, 0x03	; 3
    1056:	50 e0       	ldi	r21, 0x00	; 0
    1058:	6c e5       	ldi	r22, 0x5C	; 92
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	ce 01       	movw	r24, r28
    105e:	0e 94 53 09 	call	0x12a6	; 0x12a6 <strncasecmp_P>
    1062:	89 2b       	or	r24, r25
    1064:	c1 f4       	brne	.+48     	; 0x1096 <strtod+0x9e>
    1066:	23 96       	adiw	r28, 0x03	; 3
    1068:	45 e0       	ldi	r20, 0x05	; 5
    106a:	50 e0       	ldi	r21, 0x00	; 0
    106c:	67 e5       	ldi	r22, 0x57	; 87
    106e:	70 e0       	ldi	r23, 0x00	; 0
    1070:	ce 01       	movw	r24, r28
    1072:	0e 94 53 09 	call	0x12a6	; 0x12a6 <strncasecmp_P>
    1076:	89 2b       	or	r24, r25
    1078:	09 f4       	brne	.+2      	; 0x107c <strtod+0x84>
    107a:	25 96       	adiw	r28, 0x05	; 5
    107c:	c1 14       	cp	r12, r1
    107e:	d1 04       	cpc	r13, r1
    1080:	19 f0       	breq	.+6      	; 0x1088 <strtod+0x90>
    1082:	f6 01       	movw	r30, r12
    1084:	d1 83       	std	Z+1, r29	; 0x01
    1086:	c0 83       	st	Z, r28
    1088:	11 11       	cpse	r17, r1
    108a:	f6 c0       	rjmp	.+492    	; 0x1278 <strtod+0x280>
    108c:	60 e0       	ldi	r22, 0x00	; 0
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	80 e8       	ldi	r24, 0x80	; 128
    1092:	9f e7       	ldi	r25, 0x7F	; 127
    1094:	fa c0       	rjmp	.+500    	; 0x128a <strtod+0x292>
    1096:	43 e0       	ldi	r20, 0x03	; 3
    1098:	50 e0       	ldi	r21, 0x00	; 0
    109a:	64 e5       	ldi	r22, 0x54	; 84
    109c:	70 e0       	ldi	r23, 0x00	; 0
    109e:	ce 01       	movw	r24, r28
    10a0:	0e 94 53 09 	call	0x12a6	; 0x12a6 <strncasecmp_P>
    10a4:	89 2b       	or	r24, r25
    10a6:	59 f4       	brne	.+22     	; 0x10be <strtod+0xc6>
    10a8:	c1 14       	cp	r12, r1
    10aa:	d1 04       	cpc	r13, r1
    10ac:	09 f4       	brne	.+2      	; 0x10b0 <strtod+0xb8>
    10ae:	e9 c0       	rjmp	.+466    	; 0x1282 <strtod+0x28a>
    10b0:	f2 e0       	ldi	r31, 0x02	; 2
    10b2:	ef 0e       	add	r14, r31
    10b4:	f1 1c       	adc	r15, r1
    10b6:	f6 01       	movw	r30, r12
    10b8:	f1 82       	std	Z+1, r15	; 0x01
    10ba:	e0 82       	st	Z, r14
    10bc:	e2 c0       	rjmp	.+452    	; 0x1282 <strtod+0x28a>
    10be:	20 e0       	ldi	r18, 0x00	; 0
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	a9 01       	movw	r20, r18
    10c4:	c0 e0       	ldi	r28, 0x00	; 0
    10c6:	d0 e0       	ldi	r29, 0x00	; 0
    10c8:	f7 01       	movw	r30, r14
    10ca:	80 ed       	ldi	r24, 0xD0	; 208
    10cc:	a8 2e       	mov	r10, r24
    10ce:	a0 0e       	add	r10, r16
    10d0:	89 e0       	ldi	r24, 0x09	; 9
    10d2:	8a 15       	cp	r24, r10
    10d4:	30 f1       	brcs	.+76     	; 0x1122 <strtod+0x12a>
    10d6:	91 2f       	mov	r25, r17
    10d8:	92 60       	ori	r25, 0x02	; 2
    10da:	b9 2e       	mov	r11, r25
    10dc:	81 2f       	mov	r24, r17
    10de:	88 70       	andi	r24, 0x08	; 8
    10e0:	12 ff       	sbrs	r17, 2
    10e2:	04 c0       	rjmp	.+8      	; 0x10ec <strtod+0xf4>
    10e4:	81 11       	cpse	r24, r1
    10e6:	24 c0       	rjmp	.+72     	; 0x1130 <strtod+0x138>
    10e8:	21 96       	adiw	r28, 0x01	; 1
    10ea:	22 c0       	rjmp	.+68     	; 0x1130 <strtod+0x138>
    10ec:	81 11       	cpse	r24, r1
    10ee:	21 97       	sbiw	r28, 0x01	; 1
    10f0:	a5 e0       	ldi	r26, 0x05	; 5
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	0e 94 1e 0a 	call	0x143c	; 0x143c <__muluhisi3>
    10f8:	dc 01       	movw	r26, r24
    10fa:	cb 01       	movw	r24, r22
    10fc:	88 0f       	add	r24, r24
    10fe:	99 1f       	adc	r25, r25
    1100:	aa 1f       	adc	r26, r26
    1102:	bb 1f       	adc	r27, r27
    1104:	9c 01       	movw	r18, r24
    1106:	ad 01       	movw	r20, r26
    1108:	2a 0d       	add	r18, r10
    110a:	31 1d       	adc	r19, r1
    110c:	41 1d       	adc	r20, r1
    110e:	51 1d       	adc	r21, r1
    1110:	28 39       	cpi	r18, 0x98	; 152
    1112:	89 e9       	ldi	r24, 0x99	; 153
    1114:	38 07       	cpc	r19, r24
    1116:	48 07       	cpc	r20, r24
    1118:	89 e1       	ldi	r24, 0x19	; 25
    111a:	58 07       	cpc	r21, r24
    111c:	48 f0       	brcs	.+18     	; 0x1130 <strtod+0x138>
    111e:	16 60       	ori	r17, 0x06	; 6
    1120:	06 c0       	rjmp	.+12     	; 0x112e <strtod+0x136>
    1122:	9e ef       	ldi	r25, 0xFE	; 254
    1124:	a9 12       	cpse	r10, r25
    1126:	0a c0       	rjmp	.+20     	; 0x113c <strtod+0x144>
    1128:	13 fd       	sbrc	r17, 3
    112a:	40 c0       	rjmp	.+128    	; 0x11ac <strtod+0x1b4>
    112c:	18 60       	ori	r17, 0x08	; 8
    112e:	b1 2e       	mov	r11, r17
    1130:	8f ef       	ldi	r24, 0xFF	; 255
    1132:	e8 1a       	sub	r14, r24
    1134:	f8 0a       	sbc	r15, r24
    1136:	00 81       	ld	r16, Z
    1138:	1b 2d       	mov	r17, r11
    113a:	c6 cf       	rjmp	.-116    	; 0x10c8 <strtod+0xd0>
    113c:	80 2f       	mov	r24, r16
    113e:	8f 7d       	andi	r24, 0xDF	; 223
    1140:	85 34       	cpi	r24, 0x45	; 69
    1142:	a1 f5       	brne	.+104    	; 0x11ac <strtod+0x1b4>
    1144:	80 81       	ld	r24, Z
    1146:	8d 32       	cpi	r24, 0x2D	; 45
    1148:	11 f4       	brne	.+4      	; 0x114e <strtod+0x156>
    114a:	10 61       	ori	r17, 0x10	; 16
    114c:	06 c0       	rjmp	.+12     	; 0x115a <strtod+0x162>
    114e:	8b 32       	cpi	r24, 0x2B	; 43
    1150:	21 f0       	breq	.+8      	; 0x115a <strtod+0x162>
    1152:	31 96       	adiw	r30, 0x01	; 1
    1154:	61 e0       	ldi	r22, 0x01	; 1
    1156:	70 e0       	ldi	r23, 0x00	; 0
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <strtod+0x16a>
    115a:	81 81       	ldd	r24, Z+1	; 0x01
    115c:	32 96       	adiw	r30, 0x02	; 2
    115e:	62 e0       	ldi	r22, 0x02	; 2
    1160:	70 e0       	ldi	r23, 0x00	; 0
    1162:	80 53       	subi	r24, 0x30	; 48
    1164:	8a 30       	cpi	r24, 0x0A	; 10
    1166:	18 f0       	brcs	.+6      	; 0x116e <strtod+0x176>
    1168:	e6 1b       	sub	r30, r22
    116a:	f7 0b       	sbc	r31, r23
    116c:	1f c0       	rjmp	.+62     	; 0x11ac <strtod+0x1b4>
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	60 38       	cpi	r22, 0x80	; 128
    1174:	9c e0       	ldi	r25, 0x0C	; 12
    1176:	79 07       	cpc	r23, r25
    1178:	5c f4       	brge	.+22     	; 0x1190 <strtod+0x198>
    117a:	db 01       	movw	r26, r22
    117c:	aa 0f       	add	r26, r26
    117e:	bb 1f       	adc	r27, r27
    1180:	aa 0f       	add	r26, r26
    1182:	bb 1f       	adc	r27, r27
    1184:	6a 0f       	add	r22, r26
    1186:	7b 1f       	adc	r23, r27
    1188:	66 0f       	add	r22, r22
    118a:	77 1f       	adc	r23, r23
    118c:	68 0f       	add	r22, r24
    118e:	71 1d       	adc	r23, r1
    1190:	31 96       	adiw	r30, 0x01	; 1
    1192:	df 01       	movw	r26, r30
    1194:	11 97       	sbiw	r26, 0x01	; 1
    1196:	8c 91       	ld	r24, X
    1198:	80 53       	subi	r24, 0x30	; 48
    119a:	8a 30       	cpi	r24, 0x0A	; 10
    119c:	50 f3       	brcs	.-44     	; 0x1172 <strtod+0x17a>
    119e:	14 ff       	sbrs	r17, 4
    11a0:	03 c0       	rjmp	.+6      	; 0x11a8 <strtod+0x1b0>
    11a2:	71 95       	neg	r23
    11a4:	61 95       	neg	r22
    11a6:	71 09       	sbc	r23, r1
    11a8:	c6 0f       	add	r28, r22
    11aa:	d7 1f       	adc	r29, r23
    11ac:	11 ff       	sbrs	r17, 1
    11ae:	08 c0       	rjmp	.+16     	; 0x11c0 <strtod+0x1c8>
    11b0:	c1 14       	cp	r12, r1
    11b2:	d1 04       	cpc	r13, r1
    11b4:	29 f0       	breq	.+10     	; 0x11c0 <strtod+0x1c8>
    11b6:	cf 01       	movw	r24, r30
    11b8:	01 97       	sbiw	r24, 0x01	; 1
    11ba:	f6 01       	movw	r30, r12
    11bc:	91 83       	std	Z+1, r25	; 0x01
    11be:	80 83       	st	Z, r24
    11c0:	ca 01       	movw	r24, r20
    11c2:	b9 01       	movw	r22, r18
    11c4:	0e 94 b0 04 	call	0x960	; 0x960 <__floatunsisf>
    11c8:	21 2f       	mov	r18, r17
    11ca:	23 70       	andi	r18, 0x03	; 3
    11cc:	23 30       	cpi	r18, 0x03	; 3
    11ce:	19 f0       	breq	.+6      	; 0x11d6 <strtod+0x1de>
    11d0:	4b 01       	movw	r8, r22
    11d2:	5c 01       	movw	r10, r24
    11d4:	06 c0       	rjmp	.+12     	; 0x11e2 <strtod+0x1ea>
    11d6:	4b 01       	movw	r8, r22
    11d8:	5c 01       	movw	r10, r24
    11da:	b7 fa       	bst	r11, 7
    11dc:	b0 94       	com	r11
    11de:	b7 f8       	bld	r11, 7
    11e0:	b0 94       	com	r11
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	a9 01       	movw	r20, r18
    11e8:	c5 01       	movw	r24, r10
    11ea:	b4 01       	movw	r22, r8
    11ec:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
    11f0:	88 23       	and	r24, r24
    11f2:	09 f4       	brne	.+2      	; 0x11f6 <strtod+0x1fe>
    11f4:	3e c0       	rjmp	.+124    	; 0x1272 <strtod+0x27a>
    11f6:	d7 ff       	sbrs	r29, 7
    11f8:	06 c0       	rjmp	.+12     	; 0x1206 <strtod+0x20e>
    11fa:	d1 95       	neg	r29
    11fc:	c1 95       	neg	r28
    11fe:	d1 09       	sbc	r29, r1
    1200:	03 e7       	ldi	r16, 0x73	; 115
    1202:	10 e0       	ldi	r17, 0x00	; 0
    1204:	02 c0       	rjmp	.+4      	; 0x120a <strtod+0x212>
    1206:	0b e8       	ldi	r16, 0x8B	; 139
    1208:	10 e0       	ldi	r17, 0x00	; 0
    120a:	68 01       	movw	r12, r16
    120c:	f8 e1       	ldi	r31, 0x18	; 24
    120e:	cf 1a       	sub	r12, r31
    1210:	d1 08       	sbc	r13, r1
    1212:	90 e2       	ldi	r25, 0x20	; 32
    1214:	e9 2e       	mov	r14, r25
    1216:	f1 2c       	mov	r15, r1
    1218:	ce 15       	cp	r28, r14
    121a:	df 05       	cpc	r29, r15
    121c:	74 f0       	brlt	.+28     	; 0x123a <strtod+0x242>
    121e:	f8 01       	movw	r30, r16
    1220:	25 91       	lpm	r18, Z+
    1222:	35 91       	lpm	r19, Z+
    1224:	45 91       	lpm	r20, Z+
    1226:	54 91       	lpm	r21, Z
    1228:	c5 01       	movw	r24, r10
    122a:	b4 01       	movw	r22, r8
    122c:	0e 94 62 05 	call	0xac4	; 0xac4 <__mulsf3>
    1230:	4b 01       	movw	r8, r22
    1232:	5c 01       	movw	r10, r24
    1234:	ce 19       	sub	r28, r14
    1236:	df 09       	sbc	r29, r15
    1238:	ef cf       	rjmp	.-34     	; 0x1218 <strtod+0x220>
    123a:	04 50       	subi	r16, 0x04	; 4
    123c:	11 09       	sbc	r17, r1
    123e:	f5 94       	asr	r15
    1240:	e7 94       	ror	r14
    1242:	0c 15       	cp	r16, r12
    1244:	1d 05       	cpc	r17, r13
    1246:	41 f7       	brne	.-48     	; 0x1218 <strtod+0x220>
    1248:	8a 2d       	mov	r24, r10
    124a:	88 0f       	add	r24, r24
    124c:	8b 2d       	mov	r24, r11
    124e:	88 1f       	adc	r24, r24
    1250:	8f 3f       	cpi	r24, 0xFF	; 255
    1252:	49 f0       	breq	.+18     	; 0x1266 <strtod+0x26e>
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	30 e0       	ldi	r19, 0x00	; 0
    1258:	a9 01       	movw	r20, r18
    125a:	c5 01       	movw	r24, r10
    125c:	b4 01       	movw	r22, r8
    125e:	0e 94 03 04 	call	0x806	; 0x806 <__cmpsf2>
    1262:	81 11       	cpse	r24, r1
    1264:	06 c0       	rjmp	.+12     	; 0x1272 <strtod+0x27a>
    1266:	82 e2       	ldi	r24, 0x22	; 34
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	90 93 a8 00 	sts	0x00A8, r25	; 0x8000a8 <errno+0x1>
    126e:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <errno>
    1272:	c5 01       	movw	r24, r10
    1274:	b4 01       	movw	r22, r8
    1276:	09 c0       	rjmp	.+18     	; 0x128a <strtod+0x292>
    1278:	60 e0       	ldi	r22, 0x00	; 0
    127a:	70 e0       	ldi	r23, 0x00	; 0
    127c:	80 e8       	ldi	r24, 0x80	; 128
    127e:	9f ef       	ldi	r25, 0xFF	; 255
    1280:	04 c0       	rjmp	.+8      	; 0x128a <strtod+0x292>
    1282:	60 e0       	ldi	r22, 0x00	; 0
    1284:	70 e0       	ldi	r23, 0x00	; 0
    1286:	80 ec       	ldi	r24, 0xC0	; 192
    1288:	9f e7       	ldi	r25, 0x7F	; 127
    128a:	cd b7       	in	r28, 0x3d	; 61
    128c:	de b7       	in	r29, 0x3e	; 62
    128e:	ec e0       	ldi	r30, 0x0C	; 12
    1290:	0c 94 4b 0a 	jmp	0x1496	; 0x1496 <__epilogue_restores__+0xc>

00001294 <isspace>:
    1294:	91 11       	cpse	r25, r1
    1296:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__ctype_isfalse>
    129a:	80 32       	cpi	r24, 0x20	; 32
    129c:	19 f0       	breq	.+6      	; 0x12a4 <isspace+0x10>
    129e:	89 50       	subi	r24, 0x09	; 9
    12a0:	85 50       	subi	r24, 0x05	; 5
    12a2:	c8 f7       	brcc	.-14     	; 0x1296 <isspace+0x2>
    12a4:	08 95       	ret

000012a6 <strncasecmp_P>:
    12a6:	fb 01       	movw	r30, r22
    12a8:	dc 01       	movw	r26, r24
    12aa:	41 50       	subi	r20, 0x01	; 1
    12ac:	50 40       	sbci	r21, 0x00	; 0
    12ae:	88 f0       	brcs	.+34     	; 0x12d2 <strncasecmp_P+0x2c>
    12b0:	8d 91       	ld	r24, X+
    12b2:	81 34       	cpi	r24, 0x41	; 65
    12b4:	1c f0       	brlt	.+6      	; 0x12bc <strncasecmp_P+0x16>
    12b6:	8b 35       	cpi	r24, 0x5B	; 91
    12b8:	0c f4       	brge	.+2      	; 0x12bc <strncasecmp_P+0x16>
    12ba:	80 5e       	subi	r24, 0xE0	; 224
    12bc:	65 91       	lpm	r22, Z+
    12be:	61 34       	cpi	r22, 0x41	; 65
    12c0:	1c f0       	brlt	.+6      	; 0x12c8 <strncasecmp_P+0x22>
    12c2:	6b 35       	cpi	r22, 0x5B	; 91
    12c4:	0c f4       	brge	.+2      	; 0x12c8 <strncasecmp_P+0x22>
    12c6:	60 5e       	subi	r22, 0xE0	; 224
    12c8:	86 1b       	sub	r24, r22
    12ca:	61 11       	cpse	r22, r1
    12cc:	71 f3       	breq	.-36     	; 0x12aa <strncasecmp_P+0x4>
    12ce:	99 0b       	sbc	r25, r25
    12d0:	08 95       	ret
    12d2:	88 1b       	sub	r24, r24
    12d4:	fc cf       	rjmp	.-8      	; 0x12ce <strncasecmp_P+0x28>

000012d6 <strnlen_P>:
    12d6:	fc 01       	movw	r30, r24
    12d8:	05 90       	lpm	r0, Z+
    12da:	61 50       	subi	r22, 0x01	; 1
    12dc:	70 40       	sbci	r23, 0x00	; 0
    12de:	01 10       	cpse	r0, r1
    12e0:	d8 f7       	brcc	.-10     	; 0x12d8 <strnlen_P+0x2>
    12e2:	80 95       	com	r24
    12e4:	90 95       	com	r25
    12e6:	8e 0f       	add	r24, r30
    12e8:	9f 1f       	adc	r25, r31
    12ea:	08 95       	ret

000012ec <strnlen>:
    12ec:	fc 01       	movw	r30, r24
    12ee:	61 50       	subi	r22, 0x01	; 1
    12f0:	70 40       	sbci	r23, 0x00	; 0
    12f2:	01 90       	ld	r0, Z+
    12f4:	01 10       	cpse	r0, r1
    12f6:	d8 f7       	brcc	.-10     	; 0x12ee <strnlen+0x2>
    12f8:	80 95       	com	r24
    12fa:	90 95       	com	r25
    12fc:	8e 0f       	add	r24, r30
    12fe:	9f 1f       	adc	r25, r31
    1300:	08 95       	ret

00001302 <fputc>:
    1302:	0f 93       	push	r16
    1304:	1f 93       	push	r17
    1306:	cf 93       	push	r28
    1308:	df 93       	push	r29
    130a:	fb 01       	movw	r30, r22
    130c:	23 81       	ldd	r18, Z+3	; 0x03
    130e:	21 fd       	sbrc	r18, 1
    1310:	03 c0       	rjmp	.+6      	; 0x1318 <fputc+0x16>
    1312:	8f ef       	ldi	r24, 0xFF	; 255
    1314:	9f ef       	ldi	r25, 0xFF	; 255
    1316:	2c c0       	rjmp	.+88     	; 0x1370 <fputc+0x6e>
    1318:	22 ff       	sbrs	r18, 2
    131a:	16 c0       	rjmp	.+44     	; 0x1348 <fputc+0x46>
    131c:	46 81       	ldd	r20, Z+6	; 0x06
    131e:	57 81       	ldd	r21, Z+7	; 0x07
    1320:	24 81       	ldd	r18, Z+4	; 0x04
    1322:	35 81       	ldd	r19, Z+5	; 0x05
    1324:	42 17       	cp	r20, r18
    1326:	53 07       	cpc	r21, r19
    1328:	44 f4       	brge	.+16     	; 0x133a <fputc+0x38>
    132a:	a0 81       	ld	r26, Z
    132c:	b1 81       	ldd	r27, Z+1	; 0x01
    132e:	9d 01       	movw	r18, r26
    1330:	2f 5f       	subi	r18, 0xFF	; 255
    1332:	3f 4f       	sbci	r19, 0xFF	; 255
    1334:	31 83       	std	Z+1, r19	; 0x01
    1336:	20 83       	st	Z, r18
    1338:	8c 93       	st	X, r24
    133a:	26 81       	ldd	r18, Z+6	; 0x06
    133c:	37 81       	ldd	r19, Z+7	; 0x07
    133e:	2f 5f       	subi	r18, 0xFF	; 255
    1340:	3f 4f       	sbci	r19, 0xFF	; 255
    1342:	37 83       	std	Z+7, r19	; 0x07
    1344:	26 83       	std	Z+6, r18	; 0x06
    1346:	14 c0       	rjmp	.+40     	; 0x1370 <fputc+0x6e>
    1348:	8b 01       	movw	r16, r22
    134a:	ec 01       	movw	r28, r24
    134c:	fb 01       	movw	r30, r22
    134e:	00 84       	ldd	r0, Z+8	; 0x08
    1350:	f1 85       	ldd	r31, Z+9	; 0x09
    1352:	e0 2d       	mov	r30, r0
    1354:	09 95       	icall
    1356:	89 2b       	or	r24, r25
    1358:	e1 f6       	brne	.-72     	; 0x1312 <fputc+0x10>
    135a:	d8 01       	movw	r26, r16
    135c:	16 96       	adiw	r26, 0x06	; 6
    135e:	8d 91       	ld	r24, X+
    1360:	9c 91       	ld	r25, X
    1362:	17 97       	sbiw	r26, 0x07	; 7
    1364:	01 96       	adiw	r24, 0x01	; 1
    1366:	17 96       	adiw	r26, 0x07	; 7
    1368:	9c 93       	st	X, r25
    136a:	8e 93       	st	-X, r24
    136c:	16 97       	sbiw	r26, 0x06	; 6
    136e:	ce 01       	movw	r24, r28
    1370:	df 91       	pop	r29
    1372:	cf 91       	pop	r28
    1374:	1f 91       	pop	r17
    1376:	0f 91       	pop	r16
    1378:	08 95       	ret

0000137a <__ultoa_invert>:
    137a:	fa 01       	movw	r30, r20
    137c:	aa 27       	eor	r26, r26
    137e:	28 30       	cpi	r18, 0x08	; 8
    1380:	51 f1       	breq	.+84     	; 0x13d6 <__ultoa_invert+0x5c>
    1382:	20 31       	cpi	r18, 0x10	; 16
    1384:	81 f1       	breq	.+96     	; 0x13e6 <__ultoa_invert+0x6c>
    1386:	e8 94       	clt
    1388:	6f 93       	push	r22
    138a:	6e 7f       	andi	r22, 0xFE	; 254
    138c:	6e 5f       	subi	r22, 0xFE	; 254
    138e:	7f 4f       	sbci	r23, 0xFF	; 255
    1390:	8f 4f       	sbci	r24, 0xFF	; 255
    1392:	9f 4f       	sbci	r25, 0xFF	; 255
    1394:	af 4f       	sbci	r26, 0xFF	; 255
    1396:	b1 e0       	ldi	r27, 0x01	; 1
    1398:	3e d0       	rcall	.+124    	; 0x1416 <__ultoa_invert+0x9c>
    139a:	b4 e0       	ldi	r27, 0x04	; 4
    139c:	3c d0       	rcall	.+120    	; 0x1416 <__ultoa_invert+0x9c>
    139e:	67 0f       	add	r22, r23
    13a0:	78 1f       	adc	r23, r24
    13a2:	89 1f       	adc	r24, r25
    13a4:	9a 1f       	adc	r25, r26
    13a6:	a1 1d       	adc	r26, r1
    13a8:	68 0f       	add	r22, r24
    13aa:	79 1f       	adc	r23, r25
    13ac:	8a 1f       	adc	r24, r26
    13ae:	91 1d       	adc	r25, r1
    13b0:	a1 1d       	adc	r26, r1
    13b2:	6a 0f       	add	r22, r26
    13b4:	71 1d       	adc	r23, r1
    13b6:	81 1d       	adc	r24, r1
    13b8:	91 1d       	adc	r25, r1
    13ba:	a1 1d       	adc	r26, r1
    13bc:	20 d0       	rcall	.+64     	; 0x13fe <__ultoa_invert+0x84>
    13be:	09 f4       	brne	.+2      	; 0x13c2 <__ultoa_invert+0x48>
    13c0:	68 94       	set
    13c2:	3f 91       	pop	r19
    13c4:	2a e0       	ldi	r18, 0x0A	; 10
    13c6:	26 9f       	mul	r18, r22
    13c8:	11 24       	eor	r1, r1
    13ca:	30 19       	sub	r19, r0
    13cc:	30 5d       	subi	r19, 0xD0	; 208
    13ce:	31 93       	st	Z+, r19
    13d0:	de f6       	brtc	.-74     	; 0x1388 <__ultoa_invert+0xe>
    13d2:	cf 01       	movw	r24, r30
    13d4:	08 95       	ret
    13d6:	46 2f       	mov	r20, r22
    13d8:	47 70       	andi	r20, 0x07	; 7
    13da:	40 5d       	subi	r20, 0xD0	; 208
    13dc:	41 93       	st	Z+, r20
    13de:	b3 e0       	ldi	r27, 0x03	; 3
    13e0:	0f d0       	rcall	.+30     	; 0x1400 <__ultoa_invert+0x86>
    13e2:	c9 f7       	brne	.-14     	; 0x13d6 <__ultoa_invert+0x5c>
    13e4:	f6 cf       	rjmp	.-20     	; 0x13d2 <__ultoa_invert+0x58>
    13e6:	46 2f       	mov	r20, r22
    13e8:	4f 70       	andi	r20, 0x0F	; 15
    13ea:	40 5d       	subi	r20, 0xD0	; 208
    13ec:	4a 33       	cpi	r20, 0x3A	; 58
    13ee:	18 f0       	brcs	.+6      	; 0x13f6 <__ultoa_invert+0x7c>
    13f0:	49 5d       	subi	r20, 0xD9	; 217
    13f2:	31 fd       	sbrc	r19, 1
    13f4:	40 52       	subi	r20, 0x20	; 32
    13f6:	41 93       	st	Z+, r20
    13f8:	02 d0       	rcall	.+4      	; 0x13fe <__ultoa_invert+0x84>
    13fa:	a9 f7       	brne	.-22     	; 0x13e6 <__ultoa_invert+0x6c>
    13fc:	ea cf       	rjmp	.-44     	; 0x13d2 <__ultoa_invert+0x58>
    13fe:	b4 e0       	ldi	r27, 0x04	; 4
    1400:	a6 95       	lsr	r26
    1402:	97 95       	ror	r25
    1404:	87 95       	ror	r24
    1406:	77 95       	ror	r23
    1408:	67 95       	ror	r22
    140a:	ba 95       	dec	r27
    140c:	c9 f7       	brne	.-14     	; 0x1400 <__ultoa_invert+0x86>
    140e:	00 97       	sbiw	r24, 0x00	; 0
    1410:	61 05       	cpc	r22, r1
    1412:	71 05       	cpc	r23, r1
    1414:	08 95       	ret
    1416:	9b 01       	movw	r18, r22
    1418:	ac 01       	movw	r20, r24
    141a:	0a 2e       	mov	r0, r26
    141c:	06 94       	lsr	r0
    141e:	57 95       	ror	r21
    1420:	47 95       	ror	r20
    1422:	37 95       	ror	r19
    1424:	27 95       	ror	r18
    1426:	ba 95       	dec	r27
    1428:	c9 f7       	brne	.-14     	; 0x141c <__ultoa_invert+0xa2>
    142a:	62 0f       	add	r22, r18
    142c:	73 1f       	adc	r23, r19
    142e:	84 1f       	adc	r24, r20
    1430:	95 1f       	adc	r25, r21
    1432:	a0 1d       	adc	r26, r0
    1434:	08 95       	ret

00001436 <__ctype_isfalse>:
    1436:	99 27       	eor	r25, r25
    1438:	88 27       	eor	r24, r24

0000143a <__ctype_istrue>:
    143a:	08 95       	ret

0000143c <__muluhisi3>:
    143c:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <__umulhisi3>
    1440:	a5 9f       	mul	r26, r21
    1442:	90 0d       	add	r25, r0
    1444:	b4 9f       	mul	r27, r20
    1446:	90 0d       	add	r25, r0
    1448:	a4 9f       	mul	r26, r20
    144a:	80 0d       	add	r24, r0
    144c:	91 1d       	adc	r25, r1
    144e:	11 24       	eor	r1, r1
    1450:	08 95       	ret

00001452 <__prologue_saves__>:
    1452:	2f 92       	push	r2
    1454:	3f 92       	push	r3
    1456:	4f 92       	push	r4
    1458:	5f 92       	push	r5
    145a:	6f 92       	push	r6
    145c:	7f 92       	push	r7
    145e:	8f 92       	push	r8
    1460:	9f 92       	push	r9
    1462:	af 92       	push	r10
    1464:	bf 92       	push	r11
    1466:	cf 92       	push	r12
    1468:	df 92       	push	r13
    146a:	ef 92       	push	r14
    146c:	ff 92       	push	r15
    146e:	0f 93       	push	r16
    1470:	1f 93       	push	r17
    1472:	cf 93       	push	r28
    1474:	df 93       	push	r29
    1476:	cd b7       	in	r28, 0x3d	; 61
    1478:	de b7       	in	r29, 0x3e	; 62
    147a:	ca 1b       	sub	r28, r26
    147c:	db 0b       	sbc	r29, r27
    147e:	0f b6       	in	r0, 0x3f	; 63
    1480:	f8 94       	cli
    1482:	de bf       	out	0x3e, r29	; 62
    1484:	0f be       	out	0x3f, r0	; 63
    1486:	cd bf       	out	0x3d, r28	; 61
    1488:	09 94       	ijmp

0000148a <__epilogue_restores__>:
    148a:	2a 88       	ldd	r2, Y+18	; 0x12
    148c:	39 88       	ldd	r3, Y+17	; 0x11
    148e:	48 88       	ldd	r4, Y+16	; 0x10
    1490:	5f 84       	ldd	r5, Y+15	; 0x0f
    1492:	6e 84       	ldd	r6, Y+14	; 0x0e
    1494:	7d 84       	ldd	r7, Y+13	; 0x0d
    1496:	8c 84       	ldd	r8, Y+12	; 0x0c
    1498:	9b 84       	ldd	r9, Y+11	; 0x0b
    149a:	aa 84       	ldd	r10, Y+10	; 0x0a
    149c:	b9 84       	ldd	r11, Y+9	; 0x09
    149e:	c8 84       	ldd	r12, Y+8	; 0x08
    14a0:	df 80       	ldd	r13, Y+7	; 0x07
    14a2:	ee 80       	ldd	r14, Y+6	; 0x06
    14a4:	fd 80       	ldd	r15, Y+5	; 0x05
    14a6:	0c 81       	ldd	r16, Y+4	; 0x04
    14a8:	1b 81       	ldd	r17, Y+3	; 0x03
    14aa:	aa 81       	ldd	r26, Y+2	; 0x02
    14ac:	b9 81       	ldd	r27, Y+1	; 0x01
    14ae:	ce 0f       	add	r28, r30
    14b0:	d1 1d       	adc	r29, r1
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	f8 94       	cli
    14b6:	de bf       	out	0x3e, r29	; 62
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	cd bf       	out	0x3d, r28	; 61
    14bc:	ed 01       	movw	r28, r26
    14be:	08 95       	ret

000014c0 <__umulhisi3>:
    14c0:	a2 9f       	mul	r26, r18
    14c2:	b0 01       	movw	r22, r0
    14c4:	b3 9f       	mul	r27, r19
    14c6:	c0 01       	movw	r24, r0
    14c8:	a3 9f       	mul	r26, r19
    14ca:	70 0d       	add	r23, r0
    14cc:	81 1d       	adc	r24, r1
    14ce:	11 24       	eor	r1, r1
    14d0:	91 1d       	adc	r25, r1
    14d2:	b2 9f       	mul	r27, r18
    14d4:	70 0d       	add	r23, r0
    14d6:	81 1d       	adc	r24, r1
    14d8:	11 24       	eor	r1, r1
    14da:	91 1d       	adc	r25, r1
    14dc:	08 95       	ret

000014de <_exit>:
    14de:	f8 94       	cli

000014e0 <__stop_program>:
    14e0:	ff cf       	rjmp	.-2      	; 0x14e0 <__stop_program>
